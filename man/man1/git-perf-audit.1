.ie \n(.g .ds Aq \(aq
.el .ds Aq '
.TH audit 1  "audit " 
.SH NAME
audit \- For given measurements, check perfomance deviations of the HEAD commit against `<n>` previous commits. Group previous results and aggregate their results before comparison
.SH SYNOPSIS
\fBaudit\fR <\fB\-m\fR|\fB\-\-measurement\fR> [\fB\-n\fR|\fB\-\-max\-count\fR] [\fB\-s\fR|\fB\-\-selectors\fR] [\fB\-\-min\-measurements\fR] [\fB\-a\fR|\fB\-\-aggregate\-by\fR] [\fB\-d\fR|\fB\-\-sigma\fR] [\fB\-D\fR|\fB\-\-dispersion\-method\fR] [\fB\-h\fR|\fB\-\-help\fR] 
.SH DESCRIPTION
For given measurements, check perfomance deviations of the HEAD commit against `<n>` previous commits. Group previous results and aggregate their results before comparison.
.PP
The audit can be configured to ignore statistically significant deviations if they are below a minimum relative deviation threshold. This helps filter out noise while still catching meaningful performance changes.
.PP
## Statistical Dispersion Methods
.PP
The audit supports two methods for calculating statistical dispersion:
.PP
**Standard Deviation (stddev)**: Traditional method that is sensitive to outliers. Use when your performance data is normally distributed and you want to detect all performance changes, including those caused by outliers.
.PP
**Median Absolute Deviation (MAD)**: Robust method that is less sensitive to outliers. Use when your performance data has occasional outliers or spikes, or when you want to focus on typical performance changes rather than extreme values.
.PP
## Configuration
.PP
Configuration is done via the `.gitperfconfig` file:
.PP
**Default settings:** \- `[measurement].min_relative_deviation = 5.0` \- `[measurement].dispersion_method = "mad"` \- `[measurement].min_measurements = 3` \- `[measurement].aggregate_by = "median"` \- `[measurement].sigma = 3.5`
.PP
**Measurement\-specific settings (override defaults):** \- `[measurement."name"].min_relative_deviation = 10.0` \- `[measurement."name"].dispersion_method = "stddev"` \- `[measurement."name"].min_measurements = 5` \- `[measurement."name"].aggregate_by = "mean"` \- `[measurement."name"].sigma = 4.5`
.PP
## Precedence
.PP
All audit options follow the same precedence order: 1. CLI option (if specified) \- highest priority 2. Measurement\-specific config \- overrides default 3. Default config \- overrides built\-in default 4. Built\-in default \- lowest priority
.PP
Built\-in defaults: \- `min_measurements`: 2 \- `aggregate_by`: min \- `sigma`: 4.0 \- `dispersion_method`: stddev
.PP
When the relative deviation is below the threshold, the audit passes even if the z\-score exceeds the sigma threshold. The relative deviation is calculated as: `|(head_value / tail_median \- 1.0) * 100%|` where tail_median is the median of historical measurements (excluding HEAD).
.PP
The sparkline visualization shows the range of measurements relative to the tail median (historical measurements only).
.SH OPTIONS
.TP
\fB\-m\fR, \fB\-\-measurement\fR \fI<MEASUREMENT>\fR

.TP
\fB\-n\fR, \fB\-\-max\-count\fR \fI<MAX_COUNT>\fR [default: 40]
Limit the number of previous commits considered. HEAD is included in this count
.TP
\fB\-s\fR, \fB\-\-selectors\fR \fI<SELECTORS>\fR
Key\-value pair separated by "=" with no whitespaces to subselect measurements
.TP
\fB\-\-min\-measurements\fR \fI<MIN_MEASUREMENTS>\fR
Minimum number of measurements needed. If less, pass test and assume more measurements are needed. A minimum of two historic measurements are needed for proper evaluation of standard deviation. If not specified, uses the value from .gitperfconfig file, or defaults to 2
.TP
\fB\-a\fR, \fB\-\-aggregate\-by\fR \fI<AGGREGATE_BY>\fR
What to aggregate the measurements in each group with. If not specified, uses the value from .gitperfconfig file, or defaults to min
.br

.br
[\fIpossible values: \fRmin, max, median, mean]
.TP
\fB\-d\fR, \fB\-\-sigma\fR \fI<SIGMA>\fR
Multiple of the dispersion after which an outlier is detected. If the HEAD measurement is within the acceptable range based on this threshold, it is considered acceptable. If not specified, uses the value from .gitperfconfig file, or defaults to 4.0
.TP
\fB\-D\fR, \fB\-\-dispersion\-method\fR \fI<DISPERSION_METHOD>\fR
Method for calculating statistical dispersion. Choose between:

**stddev**: Standard deviation \- sensitive to outliers, use for normally distributed data where you want to detect all changes.

**mad**: Median Absolute Deviation \- robust to outliers, use when data has occasional spikes or you want to focus on typical changes.

If not specified, uses the value from .gitperfconfig file, or defaults to stddev.
.br

.br
[\fIpossible values: \fRstddev, mad]
.TP
\fB\-h\fR, \fB\-\-help\fR
Print help (see a summary with \*(Aq\-h\*(Aq)
