   0.107442908s DEBUG cargo_mutants::copy_tree: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/copy_tree.rs:69: walk_builder=WalkBuilder { paths: ["/root/repo"], ig_builder: IgnoreBuilder { dir: "", overrides: Override(Gitignore { set: GlobSet { len: 0, strats: [] }, root: "", globs: [], num_ignores: 0, num_whitelists: 0, matches: None }), types: Types { defs: [], selections: [], has_selected: false, glob_to_selection: [], set: GlobSet { len: 0, strats: [] }, matches: Pool(Pool { stacks: [CacheLine(Mutex { data: [], poisoned: false, .. }), CacheLine(Mutex { data: [], poisoned: false, .. }), CacheLine(Mutex { data: [], poisoned: false, .. }), CacheLine(Mutex { data: [], poisoned: false, .. }), CacheLine(Mutex { data: [], poisoned: false, .. }), CacheLine(Mutex { data: [], poisoned: false, .. }), CacheLine(Mutex { data: [], poisoned: false, .. }), CacheLine(Mutex { data: [], poisoned: false, .. })], owner: 0, owner_val: UnsafeCell { .. } }) }, explicit_ignores: [], custom_ignore_filenames: [], opts: IgnoreOptions { hidden: false, ignore: false, parents: true, git_global: false, git_ignore: false, git_exclude: false, ignore_case_insensitive: false, require_git: true } }, max_depth: None, max_filesize: None, follow_links: false, threads: 0, skip: None }
   0.125651557s DEBUG cargo_mutants::copy_tree: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/copy_tree.rs:115: Copied source tree total_bytes=413110 total_files=109 temp_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"
   0.125995958s DEBUG cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:55: starting jobserver n_tasks=2
   0.126507247s DEBUG cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }, Package { name: "git_perf_cli_types", version: "0.1.1", relative_dir: "cli_types", top_sources: ["cli_types/src/lib.rs"] }])
   0.126540350s DEBUG run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2 --package=git_perf_cli_types@0.1.1
  81.406077513s DEBUG run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=81.279549472s
  81.406357291s DEBUG cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
  81.406453286s DEBUG cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:87: timeouts=Timeouts { build: None, test: Some(0ns) }
  81.406592750s TRACE cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:99: start thread thread_id=ThreadId(3)
  81.407003969s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace && with || in raw_push"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
  81.407842965s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace && with || in raw_push"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "raw_push", return_type: "-> Result<(), GitError>", span: Span(495, 1, 542, 2) }), replacement: "||", genre: BinaryOperator, span: Span(520, 24, 520, 26), short_replaced: None, package_name: "git-perf" }
  81.408029914s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace && with || in raw_push"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
  82.010475303s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace && with || in raw_push"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=602.45711ms
  82.010520527s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace && with || in raw_push"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "raw_push", return_type: "-> Result<(), GitError>", span: Span(495, 1, 542, 2) }), replacement: "||", genre: BinaryOperator, span: Span(520, 24, 520, 26), short_replaced: None, package_name: "git-perf" }
  82.010784027s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace && with || in raw_push"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
  82.011064054s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace - with / in Stats::z_score_with_method"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
  82.011358429s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace - with / in Stats::z_score_with_method"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "Stats::z_score_with_method", return_type: "-> f64", span: Span(106, 5, 117, 6) }), replacement: "/", genre: BinaryOperator, span: Span(116, 20, 116, 21), short_replaced: None, package_name: "git-perf" }
  82.011523518s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace - with / in Stats::z_score_with_method"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
  82.613803488s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace - with / in Stats::z_score_with_method"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=602.29301ms
  82.613843259s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace - with / in Stats::z_score_with_method"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "Stats::z_score_with_method", return_type: "-> f64", span: Span(106, 5, 117, 6) }), replacement: "/", genre: BinaryOperator, span: Span(116, 20, 116, 21), short_replaced: None, package_name: "git-perf" }
  82.614129997s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace - with / in Stats::z_score_with_method"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
  82.614320782s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace parse_git_version -> Result<(i32, i32, i32)> with Ok((1, 0, 1))"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
  82.614539401s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace parse_git_version -> Result<(i32, i32, i32)> with Ok((1, 0, 1))"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "parse_git_version", return_type: "-> Result<(i32, i32, i32)>", span: Span(169, 1, 178, 2) }), replacement: "Ok((1, 0, 1))", genre: FnValue, span: Span(170, 5, 177, 6), short_replaced: None, package_name: "git-perf" }
  82.614655176s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace parse_git_version -> Result<(i32, i32, i32)> with Ok((1, 0, 1))"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
  83.367262217s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace parse_git_version -> Result<(i32, i32, i32)> with Ok((1, 0, 1))"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=752.619645ms
  83.367302950s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace parse_git_version -> Result<(i32, i32, i32)> with Ok((1, 0, 1))"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "parse_git_version", return_type: "-> Result<(i32, i32, i32)>", span: Span(169, 1, 178, 2) }), replacement: "Ok((1, 0, 1))", genre: FnValue, span: Span(170, 5, 177, 6), short_replaced: None, package_name: "git-perf" }
  83.367753577s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace parse_git_version -> Result<(i32, i32, i32)> with Ok((1, 0, 1))"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
  83.367909876s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace get_git_version -> Result<(i32, i32, i32)> with Ok((1, 0, 1))"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
  83.368117754s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace get_git_version -> Result<(i32, i32, i32)> with Ok((1, 0, 1))"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "get_git_version", return_type: "-> Result<(i32, i32, i32)>", span: Span(180, 1, 185, 2) }), replacement: "Ok((1, 0, 1))", genre: FnValue, span: Span(181, 5, 184, 32), short_replaced: None, package_name: "git-perf" }
  83.368227198s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace get_git_version -> Result<(i32, i32, i32)> with Ok((1, 0, 1))"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
  83.970598923s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace get_git_version -> Result<(i32, i32, i32)> with Ok((1, 0, 1))"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=602.382857ms
  83.970641603s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace get_git_version -> Result<(i32, i32, i32)> with Ok((1, 0, 1))"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "get_git_version", return_type: "-> Result<(i32, i32, i32)>", span: Span(180, 1, 185, 2) }), replacement: "Ok((1, 0, 1))", genre: FnValue, span: Span(181, 5, 184, 32), short_replaced: None, package_name: "git-perf" }
  83.971089404s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace get_git_version -> Result<(i32, i32, i32)> with Ok((1, 0, 1))"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
  83.971374565s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace match guard output.stderr.contains(\"but expected\") with false in map_git_error"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
  83.971631852s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace match guard output.stderr.contains(\"but expected\") with false in map_git_error"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "map_git_error", return_type: "-> GitError", span: Span(96, 1, 114, 2) }), replacement: "false", genre: MatchArmGuard, span: Span(103, 55, 103, 93), short_replaced: None, package_name: "git-perf" }
  83.971745465s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace match guard output.stderr.contains(\"but expected\") with false in map_git_error"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
  84.524098069s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace match guard output.stderr.contains(\"but expected\") with false in map_git_error"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=552.364112ms
  84.524146675s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace match guard output.stderr.contains(\"but expected\") with false in map_git_error"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "map_git_error", return_type: "-> GitError", span: Span(96, 1, 114, 2) }), replacement: "false", genre: MatchArmGuard, span: Span(103, 55, 103, 93), short_replaced: None, package_name: "git-perf" }
  84.524524880s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace match guard output.stderr.contains(\"but expected\") with false in map_git_error"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
  84.524765717s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace feed_git_command -> Result<GitOutput, GitError> with Ok(Default::default())"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
  84.525024641s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace feed_git_command -> Result<GitOutput, GitError> with Ok(Default::default())"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "feed_git_command", return_type: "-> Result<GitOutput, GitError>", span: Span(55, 1, 94, 2) }), replacement: "Ok(Default::default())", genre: FnValue, span: Span(60, 5, 93, 6), short_replaced: None, package_name: "git-perf" }
  84.525131520s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace feed_git_command -> Result<GitOutput, GitError> with Ok(Default::default())"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
  85.127580119s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace feed_git_command -> Result<GitOutput, GitError> with Ok(Default::default())"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Failure(101) elapsed=602.459927ms
  85.127621934s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace feed_git_command -> Result<GitOutput, GitError> with Ok(Default::default())"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "feed_git_command", return_type: "-> Result<GitOutput, GitError>", span: Span(55, 1, 94, 2) }), replacement: "Ok(Default::default())", genre: FnValue, span: Span(60, 5, 93, 6), short_replaced: None, package_name: "git-perf" }
  85.127970033s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace feed_git_command -> Result<GitOutput, GitError> with Ok(Default::default())"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Unviable
  85.128259255s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace walk_commits -> Result<Vec<(String, Vec<String>)>> with Ok(vec![(\"xyzzy\".into(), vec![\"xyzzy\".into()])])"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
  85.129176676s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace walk_commits -> Result<Vec<(String, Vec<String>)>> with Ok(vec![(\"xyzzy\".into(), vec![\"xyzzy\".into()])])"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "walk_commits", return_type: "-> Result<Vec<(String, Vec<String>)>>", span: Span(707, 1, 757, 2) }), replacement: "Ok(vec![(\"xyzzy\".into(), vec![\"xyzzy\".into()])])", genre: FnValue, span: Span(709, 5, 756, 16), short_replaced: None, package_name: "git-perf" }
  85.129334698s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace walk_commits -> Result<Vec<(String, Vec<String>)>> with Ok(vec![(\"xyzzy\".into(), vec![\"xyzzy\".into()])])"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
  85.732522148s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace walk_commits -> Result<Vec<(String, Vec<String>)>> with Ok(vec![(\"xyzzy\".into(), vec![\"xyzzy\".into()])])"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=603.200889ms
  85.732564444s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace walk_commits -> Result<Vec<(String, Vec<String>)>> with Ok(vec![(\"xyzzy\".into(), vec![\"xyzzy\".into()])])"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "walk_commits", return_type: "-> Result<Vec<(String, Vec<String>)>>", span: Span(707, 1, 757, 2) }), replacement: "Ok(vec![(\"xyzzy\".into(), vec![\"xyzzy\".into()])])", genre: FnValue, span: Span(709, 5, 756, 16), short_replaced: None, package_name: "git-perf" }
  85.733107424s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace walk_commits -> Result<Vec<(String, Vec<String>)>> with Ok(vec![(\"xyzzy\".into(), vec![\"xyzzy\".into()])])"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
  85.733274105s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: delete match arm GitError::RefConcurrentModification{..} | GitError::RefFailedToLock{..} in pull_internal"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
  85.734003852s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: delete match arm GitError::RefConcurrentModification{..} | GitError::RefFailedToLock{..} in pull_internal"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "pull_internal", return_type: "-> Result<(), GitError>", span: Span(764, 1, 775, 2) }), replacement: "", genre: MatchArm, span: Span(770, 9, 770, 97), short_replaced: Some("GitError::RefConcurrentModification{..} | GitError::RefFailedToLock{..}"), package_name: "git-perf" }
  85.734151015s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: delete match arm GitError::RefConcurrentModification{..} | GitError::RefFailedToLock{..} in pull_internal"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
  86.336692087s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: delete match arm GitError::RefConcurrentModification{..} | GitError::RefFailedToLock{..} in pull_internal"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=602.553544ms
  86.336731154s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: delete match arm GitError::RefConcurrentModification{..} | GitError::RefFailedToLock{..} in pull_internal"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "pull_internal", return_type: "-> Result<(), GitError>", span: Span(764, 1, 775, 2) }), replacement: "", genre: MatchArm, span: Span(770, 9, 770, 97), short_replaced: Some("GitError::RefConcurrentModification{..} | GitError::RefFailedToLock{..}"), package_name: "git-perf" }
  86.337089350s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: delete match arm GitError::RefConcurrentModification{..} | GitError::RefFailedToLock{..} in pull_internal"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
  86.337236906s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace PlotlyReporter::convert_to_x_y -> (Vec<usize>, Vec<f64>) with (vec![0], vec![-1.0])"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
  86.337576643s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace PlotlyReporter::convert_to_x_y -> (Vec<usize>, Vec<f64>) with (vec![0], vec![-1.0])"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "PlotlyReporter::convert_to_x_y", return_type: "-> (Vec<usize>, Vec<f64>)", span: Span(55, 5, 60, 6) }), replacement: "(vec![0], vec![-1.0])", genre: FnValue, span: Span(56, 9, 59, 21), short_replaced: None, package_name: "git-perf" }
  86.337748662s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace PlotlyReporter::convert_to_x_y -> (Vec<usize>, Vec<f64>) with (vec![0], vec![-1.0])"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
  87.040435724s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace PlotlyReporter::convert_to_x_y -> (Vec<usize>, Vec<f64>) with (vec![0], vec![-1.0])"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=702.703082ms
  87.040484511s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace PlotlyReporter::convert_to_x_y -> (Vec<usize>, Vec<f64>) with (vec![0], vec![-1.0])"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "PlotlyReporter::convert_to_x_y", return_type: "-> (Vec<usize>, Vec<f64>)", span: Span(55, 5, 60, 6) }), replacement: "(vec![0], vec![-1.0])", genre: FnValue, span: Span(56, 9, 59, 21), short_replaced: None, package_name: "git-perf" }
  87.040779392s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace PlotlyReporter::convert_to_x_y -> (Vec<usize>, Vec<f64>) with (vec![0], vec![-1.0])"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
  87.041156695s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace != with == in create_temp_ref"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
  87.042092344s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace != with == in create_temp_ref"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "create_temp_ref", return_type: "-> Result<String, GitError>", span: Span(237, 1, 252, 2) }), replacement: "==", genre: BinaryOperator, span: Span(239, 21, 239, 23), short_replaced: None, package_name: "git-perf" }
  87.042254478s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace != with == in create_temp_ref"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
  87.744765592s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace != with == in create_temp_ref"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=702.524418ms
  87.744809625s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace != with == in create_temp_ref"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "create_temp_ref", return_type: "-> Result<String, GitError>", span: Span(237, 1, 252, 2) }), replacement: "==", genre: BinaryOperator, span: Span(239, 21, 239, 23), short_replaced: None, package_name: "git-perf" }
  87.745121958s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace != with == in create_temp_ref"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
  87.745392240s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace / with % in <impl VecAggregation for Vec<f64>>::median"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
  87.745851319s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace / with % in <impl VecAggregation for Vec<f64>>::median"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "<impl VecAggregation for Vec<f64>>::median", return_type: "-> Option<f64>", span: Span(121, 5, 132, 6) }), replacement: "%", genre: BinaryOperator, span: Span(126, 38, 126, 39), short_replaced: None, package_name: "git-perf" }
  87.745975892s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace / with % in <impl VecAggregation for Vec<f64>>::median"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
  88.298262947s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace / with % in <impl VecAggregation for Vec<f64>>::median"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=552.300355ms
  88.298307015s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace / with % in <impl VecAggregation for Vec<f64>>::median"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "<impl VecAggregation for Vec<f64>>::median", return_type: "-> Option<f64>", span: Span(121, 5, 132, 6) }), replacement: "%", genre: BinaryOperator, span: Span(126, 38, 126, 39), short_replaced: None, package_name: "git-perf" }
  88.298730828s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace / with % in <impl VecAggregation for Vec<f64>>::median"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
  88.298972131s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace deserialize_single -> Option<MeasurementData> with Some(Default::default())"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
  88.299216638s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace deserialize_single -> Option<MeasurementData> with Some(Default::default())"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "deserialize_single", return_type: "-> Option<MeasurementData>", span: Span(41, 1, 127, 2) }), replacement: "Some(Default::default())", genre: FnValue, span: Span(42, 5, 126, 7), short_replaced: None, package_name: "git-perf" }
  88.299318472s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace deserialize_single -> Option<MeasurementData> with Some(Default::default())"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
  88.801490809s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace deserialize_single -> Option<MeasurementData> with Some(Default::default())"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Failure(101) elapsed=502.183876ms
  88.801537764s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace deserialize_single -> Option<MeasurementData> with Some(Default::default())"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "deserialize_single", return_type: "-> Option<MeasurementData>", span: Span(41, 1, 127, 2) }), replacement: "Some(Default::default())", genre: FnValue, span: Span(42, 5, 126, 7), short_replaced: None, package_name: "git-perf" }
  88.801946745s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace deserialize_single -> Option<MeasurementData> with Some(Default::default())"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Unviable
  88.802362998s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace / with * in <impl VecAggregation for Vec<f64>>::median"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
  88.802797975s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace / with * in <impl VecAggregation for Vec<f64>>::median"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "<impl VecAggregation for Vec<f64>>::median", return_type: "-> Option<f64>", span: Span(121, 5, 132, 6) }), replacement: "*", genre: BinaryOperator, span: Span(128, 37, 128, 38), short_replaced: None, package_name: "git-perf" }
  88.802924139s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace / with * in <impl VecAggregation for Vec<f64>>::median"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
  89.355227607s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace / with * in <impl VecAggregation for Vec<f64>>::median"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=552.315977ms
  89.355275281s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace / with * in <impl VecAggregation for Vec<f64>>::median"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "<impl VecAggregation for Vec<f64>>::median", return_type: "-> Option<f64>", span: Span(121, 5, 132, 6) }), replacement: "*", genre: BinaryOperator, span: Span(128, 37, 128, 38), short_replaced: None, package_name: "git-perf" }
  89.355612635s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace / with * in <impl VecAggregation for Vec<f64>>::median"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
  89.355823924s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace parse_key_value -> Result<(String, String)> with Ok((\"xyzzy\".into(), String::new()))"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git_perf_cli_types", version: "0.1.1", relative_dir: "cli_types", top_sources: ["cli_types/src/lib.rs"] }])
  89.356270758s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace parse_key_value -> Result<(String, String)> with Ok((\"xyzzy\".into(), String::new()))"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "parse_key_value", return_type: "-> Result<(String, String)>", span: Span(250, 1, 257, 2) }), replacement: "Ok((\"xyzzy\".into(), String::new()))", genre: FnValue, span: Span(251, 5, 256, 21), short_replaced: None, package_name: "git_perf_cli_types" }
  89.356395612s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace parse_key_value -> Result<(String, String)> with Ok((\"xyzzy\".into(), String::new()))"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git_perf_cli_types@0.1.1
  95.675351715s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace parse_key_value -> Result<(String, String)> with Ok((\"xyzzy\".into(), String::new()))"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=6.318968673s
  95.675393889s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace parse_key_value -> Result<(String, String)> with Ok((\"xyzzy\".into(), String::new()))"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "parse_key_value", return_type: "-> Result<(String, String)>", span: Span(250, 1, 257, 2) }), replacement: "Ok((\"xyzzy\".into(), String::new()))", genre: FnValue, span: Span(251, 5, 256, 21), short_replaced: None, package_name: "git_perf_cli_types" }
  95.675732662s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace parse_key_value -> Result<(String, String)> with Ok((\"xyzzy\".into(), String::new()))"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
  95.676248846s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace == with != in report"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
  95.676759696s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace == with != in report"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "report", return_type: "-> Result<()>", span: Span(253, 1, 363, 2) }), replacement: "!=", genre: BinaryOperator, span: Span(275, 58, 275, 60), short_replaced: None, package_name: "git-perf" }
  95.676893961s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace == with != in report"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
  96.983063430s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace == with != in report"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=1.306183673s
  96.983107327s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace == with != in report"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "report", return_type: "-> Result<()>", span: Span(253, 1, 363, 2) }), replacement: "!=", genre: BinaryOperator, span: Span(275, 58, 275, 60), short_replaced: None, package_name: "git-perf" }
  96.983428681s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace == with != in report"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
  96.983656291s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace < with == in deserialize_single"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
  96.983927559s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace < with == in deserialize_single"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "deserialize_single", return_type: "-> Option<MeasurementData>", span: Span(41, 1, 127, 2) }), replacement: "==", genre: BinaryOperator, span: Span(48, 23, 48, 24), short_replaced: None, package_name: "git-perf" }
  96.984041358s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace < with == in deserialize_single"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
  97.638500481s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace < with == in deserialize_single"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=654.471131ms
  97.638543193s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace < with == in deserialize_single"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "deserialize_single", return_type: "-> Option<MeasurementData>", span: Span(41, 1, 127, 2) }), replacement: "==", genre: BinaryOperator, span: Span(48, 23, 48, 24), short_replaced: None, package_name: "git-perf" }
  97.639088385s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace < with == in deserialize_single"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
  97.639355831s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace get_head_revision -> Result<String> with Ok(String::new())"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
  97.639796286s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace get_head_revision -> Result<String> with Ok(String::new())"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "get_head_revision", return_type: "-> Result<String>", span: Span(141, 1, 143, 2) }), replacement: "Ok(String::new())", genre: FnValue, span: Span(142, 5, 142, 38), short_replaced: None, package_name: "git-perf" }
  97.639922257s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace get_head_revision -> Result<String> with Ok(String::new())"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
  98.242431415s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace get_head_revision -> Result<String> with Ok(String::new())"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=602.522617ms
  98.242473627s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace get_head_revision -> Result<String> with Ok(String::new())"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "get_head_revision", return_type: "-> Result<String>", span: Span(141, 1, 143, 2) }), replacement: "Ok(String::new())", genre: FnValue, span: Span(142, 5, 142, 38), short_replaced: None, package_name: "git-perf" }
  98.242831850s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace get_head_revision -> Result<String> with Ok(String::new())"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
  98.243072385s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace parse_spaceless_string -> Result<String> with Ok(String::new())"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git_perf_cli_types", version: "0.1.1", relative_dir: "cli_types", top_sources: ["cli_types/src/lib.rs"] }])
  98.243458586s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace parse_spaceless_string -> Result<String> with Ok(String::new())"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "parse_spaceless_string", return_type: "-> Result<String>", span: Span(259, 1, 265, 2) }), replacement: "Ok(String::new())", genre: FnValue, span: Span(260, 5, 264, 6), short_replaced: None, package_name: "git_perf_cli_types" }
  98.243585035s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace parse_spaceless_string -> Result<String> with Ok(String::new())"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git_perf_cli_types@0.1.1
  98.495105217s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace parse_spaceless_string -> Result<String> with Ok(String::new())"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=251.533803ms
  98.495143704s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace parse_spaceless_string -> Result<String> with Ok(String::new())"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "parse_spaceless_string", return_type: "-> Result<String>", span: Span(259, 1, 265, 2) }), replacement: "Ok(String::new())", genre: FnValue, span: Span(260, 5, 264, 6), short_replaced: None, package_name: "git_perf_cli_types" }
  98.495639042s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace parse_spaceless_string -> Result<String> with Ok(String::new())"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
  98.496142173s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/audit.rs: replace < with > in audit"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
  98.496556707s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/audit.rs: replace < with > in audit"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "audit", return_type: "-> Result<AuditResult>", span: Span(77, 1, 207, 2) }), replacement: ">", genre: BinaryOperator, span: Span(156, 50, 156, 51), short_replaced: None, package_name: "git-perf" }
  98.496679348s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/audit.rs: replace < with > in audit"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
  99.750893215s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/audit.rs: replace < with > in audit"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=1.254225297s
  99.750937148s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/audit.rs: replace < with > in audit"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "audit", return_type: "-> Result<AuditResult>", span: Span(77, 1, 207, 2) }), replacement: ">", genre: BinaryOperator, span: Span(156, 50, 156, 51), short_replaced: None, package_name: "git-perf" }
  99.751319632s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/audit.rs: replace < with > in audit"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
  99.751654359s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace && with || in report"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
  99.752042635s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace && with || in report"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "report", return_type: "-> Result<()>", span: Span(253, 1, 363, 2) }), replacement: "||", genre: BinaryOperator, span: Span(269, 42, 269, 44), short_replaced: None, package_name: "git-perf" }
  99.752166301s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace && with || in report"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
 100.454690113s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace && with || in report"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=702.536588ms
 100.454733792s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace && with || in report"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "report", return_type: "-> Result<()>", span: Span(253, 1, 363, 2) }), replacement: "||", genre: BinaryOperator, span: Span(269, 42, 269, 44), short_replaced: None, package_name: "git-perf" }
 100.455103400s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace && with || in report"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
 100.455453899s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace parse_datetime_value -> Result<DateTime<Utc>> with Ok(DateTime::from_iter([Default::default()]))"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git_perf_cli_types", version: "0.1.1", relative_dir: "cli_types", top_sources: ["cli_types/src/lib.rs"] }])
 100.455875411s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace parse_datetime_value -> Result<DateTime<Utc>> with Ok(DateTime::from_iter([Default::default()]))"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "parse_datetime_value", return_type: "-> Result<DateTime<Utc>>", span: Span(271, 1, 285, 2) }), replacement: "Ok(DateTime::from_iter([Default::default()]))", genre: FnValue, span: Span(272, 5, 284, 26), short_replaced: None, package_name: "git_perf_cli_types" }
 100.456001850s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace parse_datetime_value -> Result<DateTime<Utc>> with Ok(DateTime::from_iter([Default::default()]))"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git_perf_cli_types@0.1.1
 101.810541893s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace parse_datetime_value -> Result<DateTime<Utc>> with Ok(DateTime::from_iter([Default::default()]))"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Failure(101) elapsed=1.354552931s
 101.810586051s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace parse_datetime_value -> Result<DateTime<Utc>> with Ok(DateTime::from_iter([Default::default()]))"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "parse_datetime_value", return_type: "-> Result<DateTime<Utc>>", span: Span(271, 1, 285, 2) }), replacement: "Ok(DateTime::from_iter([Default::default()]))", genre: FnValue, span: Span(272, 5, 284, 26), short_replaced: None, package_name: "git_perf_cli_types" }
 101.811509227s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace parse_datetime_value -> Result<DateTime<Utc>> with Ok(DateTime::from_iter([Default::default()]))"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Unviable
 101.812168806s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace + with - in parse_key_value"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git_perf_cli_types", version: "0.1.1", relative_dir: "cli_types", top_sources: ["cli_types/src/lib.rs"] }])
 101.812860461s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace + with - in parse_key_value"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "parse_key_value", return_type: "-> Result<(String, String)>", span: Span(250, 1, 257, 2) }), replacement: "-", genre: BinaryOperator, span: Span(255, 47, 255, 48), short_replaced: None, package_name: "git_perf_cli_types" }
 101.813000726s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace + with - in parse_key_value"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git_perf_cli_types@0.1.1
 102.064741299s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace + with - in parse_key_value"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=251.752566ms
 102.064785166s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace + with - in parse_key_value"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "parse_key_value", return_type: "-> Result<(String, String)>", span: Span(250, 1, 257, 2) }), replacement: "-", genre: BinaryOperator, span: Span(255, 47, 255, 48), short_replaced: None, package_name: "git_perf_cli_types" }
 102.065212529s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace + with - in parse_key_value"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
 102.065532959s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace raw_add_note_line_to_head -> Result<(), GitError> with Ok(())"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
 102.066389382s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace raw_add_note_line_to_head -> Result<(), GitError> with Ok(())"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "raw_add_note_line_to_head", return_type: "-> Result<(), GitError>", span: Span(91, 1, 141, 2) }), replacement: "Ok(())", genre: FnValue, span: Span(92, 5, 140, 11), short_replaced: None, package_name: "git-perf" }
 102.066544367s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace raw_add_note_line_to_head -> Result<(), GitError> with Ok(())"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
 103.470672808s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace raw_add_note_line_to_head -> Result<(), GitError> with Ok(())"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=1.404142093s
 103.470713645s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace raw_add_note_line_to_head -> Result<(), GitError> with Ok(())"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "raw_add_note_line_to_head", return_type: "-> Result<(), GitError>", span: Span(91, 1, 141, 2) }), replacement: "Ok(())", genre: FnValue, span: Span(92, 5, 140, 11), short_replaced: None, package_name: "git-perf" }
 103.471246721s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace raw_add_note_line_to_head -> Result<(), GitError> with Ok(())"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
 103.471646592s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace parse_git_version -> Result<(i32, i32, i32)> with Ok((0, -1, 0))"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
 103.471933446s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace parse_git_version -> Result<(i32, i32, i32)> with Ok((0, -1, 0))"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "parse_git_version", return_type: "-> Result<(i32, i32, i32)>", span: Span(169, 1, 178, 2) }), replacement: "Ok((0, -1, 0))", genre: FnValue, span: Span(170, 5, 177, 6), short_replaced: None, package_name: "git-perf" }
 103.472048749s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace parse_git_version -> Result<(i32, i32, i32)> with Ok((0, -1, 0))"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
 104.174551140s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace parse_git_version -> Result<(i32, i32, i32)> with Ok((0, -1, 0))"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=702.515218ms
 104.174590211s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace parse_git_version -> Result<(i32, i32, i32)> with Ok((0, -1, 0))"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "parse_git_version", return_type: "-> Result<(i32, i32, i32)>", span: Span(169, 1, 178, 2) }), replacement: "Ok((0, -1, 0))", genre: FnValue, span: Span(170, 5, 177, 6), short_replaced: None, package_name: "git-perf" }
 104.175007593s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace parse_git_version -> Result<(i32, i32, i32)> with Ok((0, -1, 0))"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
 104.175409038s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace calculate_mad -> f64 with 1.0"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
 104.175836127s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace calculate_mad -> f64 with 1.0"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "calculate_mad", return_type: "-> f64", span: Span(64, 1, 78, 2) }), replacement: "1.0", genre: FnValue, span: Span(65, 5, 77, 37), short_replaced: None, package_name: "git-perf" }
 104.175970937s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace calculate_mad -> f64 with 1.0"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
 104.779144425s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace calculate_mad -> f64 with 1.0"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=603.186294ms
 104.779191530s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace calculate_mad -> f64 with 1.0"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "calculate_mad", return_type: "-> f64", span: Span(64, 1, 78, 2) }), replacement: "1.0", genre: FnValue, span: Span(65, 5, 77, 37), short_replaced: None, package_name: "git-perf" }
 104.779564203s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace calculate_mad -> f64 with 1.0"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
 104.779866685s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace report -> Result<()> with Ok(())"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
 104.780342389s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace report -> Result<()> with Ok(())"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "report", return_type: "-> Result<()>", span: Span(253, 1, 363, 2) }), replacement: "Ok(())", genre: FnValue, span: Span(261, 5, 362, 11), short_replaced: None, package_name: "git-perf" }
 104.780458300s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace report -> Result<()> with Ok(())"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
 105.432868948s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace report -> Result<()> with Ok(())"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=652.422092ms
 105.432940723s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace report -> Result<()> with Ok(())"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "report", return_type: "-> Result<()>", span: Span(253, 1, 363, 2) }), replacement: "Ok(())", genre: FnValue, span: Span(261, 5, 362, 11), short_replaced: None, package_name: "git-perf" }
 105.433362661s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace report -> Result<()> with Ok(())"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
 105.433745449s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace push -> Result<()> with Ok(())"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
 105.434612839s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace push -> Result<()> with Ok(())"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "push", return_type: "-> Result<()>", span: Span(777, 1, 802, 2) }), replacement: "Ok(())", genre: FnValue, span: Span(778, 5, 801, 11), short_replaced: None, package_name: "git-perf" }
 105.434775978s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace push -> Result<()> with Ok(())"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
 106.137764093s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace push -> Result<()> with Ok(())"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=703.002875ms
 106.137805664s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace push -> Result<()> with Ok(())"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "push", return_type: "-> Result<()>", span: Span(777, 1, 802, 2) }), replacement: "Ok(())", genre: FnValue, span: Span(778, 5, 801, 11), short_replaced: None, package_name: "git-perf" }
 106.138227482s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace push -> Result<()> with Ok(())"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
 106.138586530s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace raw_prune -> Result<(), GitError> with Ok(())"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
 106.139383833s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace raw_prune -> Result<(), GitError> with Ok(())"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "raw_prune", return_type: "-> Result<(), GitError>", span: Span(604, 1, 644, 2) }), replacement: "Ok(())", genre: FnValue, span: Span(605, 5, 643, 11), short_replaced: None, package_name: "git-perf" }
 106.139524285s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace raw_prune -> Result<(), GitError> with Ok(())"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
 106.741810631s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace raw_prune -> Result<(), GitError> with Ok(())"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=602.29926ms
 106.741852507s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace raw_prune -> Result<(), GitError> with Ok(())"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "raw_prune", return_type: "-> Result<(), GitError>", span: Span(604, 1, 644, 2) }), replacement: "Ok(())", genre: FnValue, span: Span(605, 5, 643, 11), short_replaced: None, package_name: "git-perf" }
 106.742302995s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace raw_prune -> Result<(), GitError> with Ok(())"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
 106.742784742s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace - with / in PlotlyReporter::convert_to_x_y"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
 106.743241373s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace - with / in PlotlyReporter::convert_to_x_y"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "PlotlyReporter::convert_to_x_y", return_type: "-> (Vec<usize>, Vec<f64>)", span: Span(55, 5, 60, 6) }), replacement: "/", genre: BinaryOperator, span: Span(58, 38, 58, 39), short_replaced: None, package_name: "git-perf" }
 106.743368786s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace - with / in PlotlyReporter::convert_to_x_y"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
 107.395764620s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace - with / in PlotlyReporter::convert_to_x_y"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=652.409958ms
 107.395815718s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace - with / in PlotlyReporter::convert_to_x_y"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "PlotlyReporter::convert_to_x_y", return_type: "-> (Vec<usize>, Vec<f64>)", span: Span(55, 5, 60, 6) }), replacement: "/", genre: BinaryOperator, span: Span(58, 38, 58, 39), short_replaced: None, package_name: "git-perf" }
 107.396238983s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace - with / in PlotlyReporter::convert_to_x_y"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
 107.396553598s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace + with - in <impl VecAggregation for Vec<f64>>::median"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
 107.396998038s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace + with - in <impl VecAggregation for Vec<f64>>::median"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "<impl VecAggregation for Vec<f64>>::median", return_type: "-> Option<f64>", span: Span(121, 5, 132, 6) }), replacement: "-", genre: BinaryOperator, span: Span(128, 28, 128, 29), short_replaced: None, package_name: "git-perf" }
 107.397121769s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace + with - in <impl VecAggregation for Vec<f64>>::median"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
 107.949305300s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace + with - in <impl VecAggregation for Vec<f64>>::median"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=552.196826ms
 107.949348459s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace + with - in <impl VecAggregation for Vec<f64>>::median"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "<impl VecAggregation for Vec<f64>>::median", return_type: "-> Option<f64>", span: Span(121, 5, 132, 6) }), replacement: "-", genre: BinaryOperator, span: Span(128, 28, 128, 29), short_replaced: None, package_name: "git-perf" }
 107.949802612s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace + with - in <impl VecAggregation for Vec<f64>>::median"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
 107.950183361s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace == with != in deserialize_single"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
 107.950505189s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace == with != in deserialize_single"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "deserialize_single", return_type: "-> Option<MeasurementData>", span: Span(41, 1, 127, 2) }), replacement: "!=", genre: BinaryOperator, span: Span(91, 36, 91, 38), short_replaced: None, package_name: "git-perf" }
 107.950618336s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace == with != in deserialize_single"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
 108.552870372s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace == with != in deserialize_single"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=602.263804ms
 108.552926674s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace == with != in deserialize_single"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "deserialize_single", return_type: "-> Option<MeasurementData>", span: Span(41, 1, 127, 2) }), replacement: "!=", genre: BinaryOperator, span: Span(91, 36, 91, 38), short_replaced: None, package_name: "git-perf" }
 108.553545085s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace == with != in deserialize_single"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
 108.554066494s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace <impl VecAggregation for Vec<f64>>::median -> Option<f64> with Some(0.0)"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
 108.554544480s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace <impl VecAggregation for Vec<f64>>::median -> Option<f64> with Some(0.0)"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "<impl VecAggregation for Vec<f64>>::median", return_type: "-> Option<f64>", span: Span(121, 5, 132, 6) }), replacement: "Some(0.0)", genre: FnValue, span: Span(122, 9, 131, 10), short_replaced: None, package_name: "git-perf" }
 108.554687066s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace <impl VecAggregation for Vec<f64>>::median -> Option<f64> with Some(0.0)"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
 109.157167733s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace <impl VecAggregation for Vec<f64>>::median -> Option<f64> with Some(0.0)"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=602.493567ms
 109.157213689s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace <impl VecAggregation for Vec<f64>>::median -> Option<f64> with Some(0.0)"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "<impl VecAggregation for Vec<f64>>::median", return_type: "-> Option<f64>", span: Span(121, 5, 132, 6) }), replacement: "Some(0.0)", genre: FnValue, span: Span(122, 9, 131, 10), short_replaced: None, package_name: "git-perf" }
 109.157940236s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace <impl VecAggregation for Vec<f64>>::median -> Option<f64> with Some(0.0)"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
 109.158443422s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace <impl Reporter<'a> for PlotlyReporter>::as_bytes -> Vec<u8> with vec![0]"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
 109.158916141s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace <impl Reporter<'a> for PlotlyReporter>::as_bytes -> Vec<u8> with vec![0]"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "<impl Reporter<'a> for PlotlyReporter>::as_bytes", return_type: "-> Vec<u8>", span: Span(142, 5, 144, 6) }), replacement: "vec![0]", genre: FnValue, span: Span(143, 9, 143, 48), short_replaced: None, package_name: "git-perf" }
 109.159036295s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace <impl Reporter<'a> for PlotlyReporter>::as_bytes -> Vec<u8> with vec![0]"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
 109.711257175s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace <impl Reporter<'a> for PlotlyReporter>::as_bytes -> Vec<u8> with vec![0]"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=552.233272ms
 109.711300412s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace <impl Reporter<'a> for PlotlyReporter>::as_bytes -> Vec<u8> with vec![0]"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "<impl Reporter<'a> for PlotlyReporter>::as_bytes", return_type: "-> Vec<u8>", span: Span(142, 5, 144, 6) }), replacement: "vec![0]", genre: FnValue, span: Span(143, 9, 143, 48), short_replaced: None, package_name: "git-perf" }
 109.711898115s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/reporting.rs: replace <impl Reporter<'a> for PlotlyReporter>::as_bytes -> Vec<u8> with vec![0]"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
 109.712331698s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/config.rs: replace determine_epoch_from_config -> Option<u32> with None"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
 109.712967780s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/config.rs: replace determine_epoch_from_config -> Option<u32> with None"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "determine_epoch_from_config", return_type: "-> Option<u32>", span: Span(125, 1, 137, 2) }), replacement: "None", genre: FnValue, span: Span(126, 5, 136, 56), short_replaced: None, package_name: "git-perf" }
 109.713113748s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/config.rs: replace determine_epoch_from_config -> Option<u32> with None"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
 110.365789091s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/config.rs: replace determine_epoch_from_config -> Option<u32> with None"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=652.690843ms
 110.365832634s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/config.rs: replace determine_epoch_from_config -> Option<u32> with None"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "determine_epoch_from_config", return_type: "-> Option<u32>", span: Span(125, 1, 137, 2) }), replacement: "None", genre: FnValue, span: Span(126, 5, 136, 56), short_replaced: None, package_name: "git-perf" }
 110.366448128s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/config.rs: replace determine_epoch_from_config -> Option<u32> with None"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
 110.366995656s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace < with <= in deserialize_single"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
 110.367314008s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace < with <= in deserialize_single"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "deserialize_single", return_type: "-> Option<MeasurementData>", span: Span(41, 1, 127, 2) }), replacement: "<=", genre: BinaryOperator, span: Span(48, 23, 48, 24), short_replaced: None, package_name: "git-perf" }
 110.367453798s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace < with <= in deserialize_single"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
 111.019992851s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace < with <= in deserialize_single"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=652.576817ms
 111.020040668s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace < with <= in deserialize_single"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "deserialize_single", return_type: "-> Option<MeasurementData>", span: Span(41, 1, 127, 2) }), replacement: "<=", genre: BinaryOperator, span: Span(48, 23, 48, 24), short_replaced: None, package_name: "git-perf" }
 111.020682053s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace < with <= in deserialize_single"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
 111.021031414s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/audit.rs: replace audit_multiple -> Result<()> with Ok(())"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
 111.021335018s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/audit.rs: replace audit_multiple -> Result<()> with Ok(())"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "audit_multiple", return_type: "-> Result<()>", span: Span(41, 1, 75, 2) }), replacement: "Ok(())", genre: FnValue, span: Span(50, 5, 74, 11), short_replaced: None, package_name: "git-perf" }
 111.021458067s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/audit.rs: replace audit_multiple -> Result<()> with Ok(())"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
 111.674184826s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/audit.rs: replace audit_multiple -> Result<()> with Ok(())"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=652.738379ms
 111.674233291s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/audit.rs: replace audit_multiple -> Result<()> with Ok(())"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "audit_multiple", return_type: "-> Result<()>", span: Span(41, 1, 75, 2) }), replacement: "Ok(())", genre: FnValue, span: Span(50, 5, 74, 11), short_replaced: None, package_name: "git-perf" }
 111.674886541s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/audit.rs: replace audit_multiple -> Result<()> with Ok(())"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
 111.675233598s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/audit.rs: replace / with * in audit"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
 111.675477887s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/audit.rs: replace / with * in audit"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "audit", return_type: "-> Result<AuditResult>", span: Span(77, 1, 207, 2) }), replacement: "*", genre: BinaryOperator, span: Span(150, 41, 150, 42), short_replaced: None, package_name: "git-perf" }
 111.675591455s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/audit.rs: replace / with * in audit"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
 112.278648077s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/audit.rs: replace / with * in audit"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=603.068167ms
 112.278692286s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/audit.rs: replace / with * in audit"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "audit", return_type: "-> Result<AuditResult>", span: Span(77, 1, 207, 2) }), replacement: "*", genre: BinaryOperator, span: Span(150, 41, 150, 42), short_replaced: None, package_name: "git-perf" }
 112.279175876s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/audit.rs: replace / with * in audit"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
 112.279339855s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/config.rs: replace read_config_from_file -> Result<String> with Ok(\"xyzzy\".into())"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
 112.279827826s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/config.rs: replace read_config_from_file -> Result<String> with Ok(\"xyzzy\".into())"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "read_config_from_file", return_type: "-> Result<String>", span: Span(119, 1, 123, 2) }), replacement: "Ok(\"xyzzy\".into())", genre: FnValue, span: Span(120, 5, 122, 17), short_replaced: None, package_name: "git-perf" }
 112.279997779s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/config.rs: replace read_config_from_file -> Result<String> with Ok(\"xyzzy\".into())"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
 112.932600421s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/config.rs: replace read_config_from_file -> Result<String> with Ok(\"xyzzy\".into())"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=652.615477ms
 112.932650666s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/config.rs: replace read_config_from_file -> Result<String> with Ok(\"xyzzy\".into())"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "read_config_from_file", return_type: "-> Result<String>", span: Span(119, 1, 123, 2) }), replacement: "Ok(\"xyzzy\".into())", genre: FnValue, span: Span(120, 5, 122, 17), short_replaced: None, package_name: "git-perf" }
 112.933315192s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/config.rs: replace read_config_from_file -> Result<String> with Ok(\"xyzzy\".into())"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
 112.933637860s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: delete match arm \"stddev\" in <impl FromStr for DispersionMethod>::from_str"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git_perf_cli_types", version: "0.1.1", relative_dir: "cli_types", top_sources: ["cli_types/src/lib.rs"] }])
 112.933983861s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: delete match arm \"stddev\" in <impl FromStr for DispersionMethod>::from_str"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "<impl FromStr for DispersionMethod>::from_str", return_type: "-> Result<Self, Self::Err>", span: Span(28, 5, 37, 6) }), replacement: "", genre: MatchArm, span: Span(30, 13, 30, 65), short_replaced: Some("\"stddev\""), package_name: "git_perf_cli_types" }
 112.934105947s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: delete match arm \"stddev\" in <impl FromStr for DispersionMethod>::from_str"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git_perf_cli_types@0.1.1
 113.286052242s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: delete match arm \"stddev\" in <impl FromStr for DispersionMethod>::from_str"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=351.959099ms
 113.286103379s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: delete match arm \"stddev\" in <impl FromStr for DispersionMethod>::from_str"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "<impl FromStr for DispersionMethod>::from_str", return_type: "-> Result<Self, Self::Err>", span: Span(28, 5, 37, 6) }), replacement: "", genre: MatchArm, span: Span(30, 13, 30, 65), short_replaced: Some("\"stddev\""), package_name: "git_perf_cli_types" }
 113.286617200s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: delete match arm \"stddev\" in <impl FromStr for DispersionMethod>::from_str"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
 113.286924269s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace <impl FromStr for DispersionMethod>::from_str -> Result<Self, Self::Err> with Ok(Default::default())"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git_perf_cli_types", version: "0.1.1", relative_dir: "cli_types", top_sources: ["cli_types/src/lib.rs"] }])
 113.287228880s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace <impl FromStr for DispersionMethod>::from_str -> Result<Self, Self::Err> with Ok(Default::default())"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "<impl FromStr for DispersionMethod>::from_str", return_type: "-> Result<Self, Self::Err>", span: Span(28, 5, 37, 6) }), replacement: "Ok(Default::default())", genre: FnValue, span: Span(29, 9, 36, 10), short_replaced: None, package_name: "git_perf_cli_types" }
 113.287350361s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace <impl FromStr for DispersionMethod>::from_str -> Result<Self, Self::Err> with Ok(Default::default())"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git_perf_cli_types@0.1.1
 113.639125128s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace <impl FromStr for DispersionMethod>::from_str -> Result<Self, Self::Err> with Ok(Default::default())"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Failure(101) elapsed=351.787232ms
 113.639173968s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace <impl FromStr for DispersionMethod>::from_str -> Result<Self, Self::Err> with Ok(Default::default())"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "<impl FromStr for DispersionMethod>::from_str", return_type: "-> Result<Self, Self::Err>", span: Span(28, 5, 37, 6) }), replacement: "Ok(Default::default())", genre: FnValue, span: Span(29, 9, 36, 10), short_replaced: None, package_name: "git_perf_cli_types" }
 113.639950291s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace <impl FromStr for DispersionMethod>::from_str -> Result<Self, Self::Err> with Ok(Default::default())"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Unviable
 113.640365473s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace + with * in <impl VecAggregation for Vec<f64>>::median"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
 113.640773342s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace + with * in <impl VecAggregation for Vec<f64>>::median"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "<impl VecAggregation for Vec<f64>>::median", return_type: "-> Option<f64>", span: Span(121, 5, 132, 6) }), replacement: "*", genre: BinaryOperator, span: Span(128, 28, 128, 29), short_replaced: None, package_name: "git-perf" }
 113.640898517s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace + with * in <impl VecAggregation for Vec<f64>>::median"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
 114.895004353s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace + with * in <impl VecAggregation for Vec<f64>>::median"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=1.254118145s
 114.895048697s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace + with * in <impl VecAggregation for Vec<f64>>::median"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "<impl VecAggregation for Vec<f64>>::median", return_type: "-> Option<f64>", span: Span(121, 5, 132, 6) }), replacement: "*", genre: BinaryOperator, span: Span(128, 28, 128, 29), short_replaced: None, package_name: "git-perf" }
 114.895540692s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/stats.rs: replace + with * in <impl VecAggregation for Vec<f64>>::median"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
 114.895712757s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace parse_git_version -> Result<(i32, i32, i32)> with Ok((-1, 0, 1))"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
 114.895926063s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace parse_git_version -> Result<(i32, i32, i32)> with Ok((-1, 0, 1))"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "parse_git_version", return_type: "-> Result<(i32, i32, i32)>", span: Span(169, 1, 178, 2) }), replacement: "Ok((-1, 0, 1))", genre: FnValue, span: Span(170, 5, 177, 6), short_replaced: None, package_name: "git-perf" }
 114.896034249s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace parse_git_version -> Result<(i32, i32, i32)> with Ok((-1, 0, 1))"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
 115.498702262s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace parse_git_version -> Result<(i32, i32, i32)> with Ok((-1, 0, 1))"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=602.679513ms
 115.498750881s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace parse_git_version -> Result<(i32, i32, i32)> with Ok((-1, 0, 1))"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "parse_git_version", return_type: "-> Result<(i32, i32, i32)>", span: Span(169, 1, 178, 2) }), replacement: "Ok((-1, 0, 1))", genre: FnValue, span: Span(170, 5, 177, 6), short_replaced: None, package_name: "git-perf" }
 115.499438641s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_lowlevel.rs: replace parse_git_version -> Result<(i32, i32, i32)> with Ok((-1, 0, 1))"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
 115.499707145s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/config.rs: replace find_config_path -> Option<PathBuf> with Some(Default::default())"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
 115.500243470s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/config.rs: replace find_config_path -> Option<PathBuf> with Some(Default::default())"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "find_config_path", return_type: "-> Option<PathBuf>", span: Span(109, 1, 117, 2) }), replacement: "Some(Default::default())", genre: FnValue, span: Span(111, 5, 116, 6), short_replaced: None, package_name: "git-perf" }
 115.500381640s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/config.rs: replace find_config_path -> Option<PathBuf> with Some(Default::default())"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
 116.153010155s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/config.rs: replace find_config_path -> Option<PathBuf> with Some(Default::default())"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=652.640532ms
 116.153056725s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/config.rs: replace find_config_path -> Option<PathBuf> with Some(Default::default())"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "find_config_path", return_type: "-> Option<PathBuf>", span: Span(109, 1, 117, 2) }), replacement: "Some(Default::default())", genre: FnValue, span: Span(111, 5, 116, 6), short_replaced: None, package_name: "git-perf" }
 116.153558031s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/config.rs: replace find_config_path -> Option<PathBuf> with Some(Default::default())"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
 116.154077291s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace - with / in parse_datetime_value"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git_perf_cli_types", version: "0.1.1", relative_dir: "cli_types", top_sources: ["cli_types/src/lib.rs"] }])
 116.154470690s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace - with / in parse_datetime_value"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "parse_datetime_value", return_type: "-> Result<DateTime<Utc>>", span: Span(271, 1, 285, 2) }), replacement: "/", genre: BinaryOperator, span: Span(276, 50, 276, 51), short_replaced: None, package_name: "git_perf_cli_types" }
 116.154598409s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace - with / in parse_datetime_value"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git_perf_cli_types@0.1.1
 116.506271405s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace - with / in parse_datetime_value"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=351.686478ms
 116.506325060s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace - with / in parse_datetime_value"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "parse_datetime_value", return_type: "-> Result<DateTime<Utc>>", span: Span(271, 1, 285, 2) }), replacement: "/", genre: BinaryOperator, span: Span(276, 50, 276, 51), short_replaced: None, package_name: "git_perf_cli_types" }
 116.506980465s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace - with / in parse_datetime_value"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
 116.507287126s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace deserialize -> Vec<MeasurementData> with vec![Default::default()]"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
 116.507503262s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace deserialize -> Vec<MeasurementData> with vec![Default::default()]"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "deserialize", return_type: "-> Vec<MeasurementData>", span: Span(129, 1, 135, 2) }), replacement: "vec![Default::default()]", genre: FnValue, span: Span(130, 5, 134, 23), short_replaced: None, package_name: "git-perf" }
 116.507623620s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace deserialize -> Vec<MeasurementData> with vec![Default::default()]"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
 117.711659439s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace deserialize -> Vec<MeasurementData> with vec![Default::default()]"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Failure(101) elapsed=1.204047794s
 117.711702421s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace deserialize -> Vec<MeasurementData> with vec![Default::default()]"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "deserialize", return_type: "-> Vec<MeasurementData>", span: Span(129, 1, 135, 2) }), replacement: "vec![Default::default()]", genre: FnValue, span: Span(130, 5, 134, 23), short_replaced: None, package_name: "git-perf" }
 117.712386188s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace deserialize -> Vec<MeasurementData> with vec![Default::default()]"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Unviable
 117.712905427s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace update_read_branch -> Result<TempRef, GitError> with Ok(Default::default())"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
 117.713832005s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace update_read_branch -> Result<TempRef, GitError> with Ok(Default::default())"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "update_read_branch", return_type: "-> Result<TempRef, GitError>", span: Span(684, 1, 705, 2) }), replacement: "Ok(Default::default())", genre: FnValue, span: Span(685, 5, 704, 17), short_replaced: None, package_name: "git-perf" }
 117.713987588s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace update_read_branch -> Result<TempRef, GitError> with Ok(Default::default())"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
 118.316442164s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace update_read_branch -> Result<TempRef, GitError> with Ok(Default::default())"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Failure(101) elapsed=602.4671ms
 118.316488058s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace update_read_branch -> Result<TempRef, GitError> with Ok(Default::default())"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "update_read_branch", return_type: "-> Result<TempRef, GitError>", span: Span(684, 1, 705, 2) }), replacement: "Ok(Default::default())", genre: FnValue, span: Span(685, 5, 704, 17), short_replaced: None, package_name: "git-perf" }
 118.317039935s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/git/git_interop.rs: replace update_read_branch -> Result<TempRef, GitError> with Ok(Default::default())"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Unviable
 118.317452008s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace serialize_single -> String with String::new()"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
 118.317888023s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace serialize_single -> String with String::new()"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "serialize_single", return_type: "-> String", span: Span(16, 1, 32, 2) }), replacement: "String::new()", genre: FnValue, span: Span(20, 5, 31, 36), short_replaced: None, package_name: "git-perf" }
 118.318008644s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace serialize_single -> String with String::new()"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
 118.970395096s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace serialize_single -> String with String::new()"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=652.399781ms
 118.970436698s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace serialize_single -> String with String::new()"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "serialize_single", return_type: "-> String", span: Span(16, 1, 32, 2) }), replacement: "String::new()", genre: FnValue, span: Span(20, 5, 31, 36), short_replaced: None, package_name: "git-perf" }
 118.970950566s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/serialization.rs: replace serialize_single -> String with String::new()"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
 118.971196220s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace - with + in parse_datetime_value"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git_perf_cli_types", version: "0.1.1", relative_dir: "cli_types", top_sources: ["cli_types/src/lib.rs"] }])
 118.971525458s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace - with + in parse_datetime_value"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "parse_datetime_value", return_type: "-> Result<DateTime<Utc>>", span: Span(271, 1, 285, 2) }), replacement: "+", genre: BinaryOperator, span: Span(284, 13, 284, 14), short_replaced: None, package_name: "git_perf_cli_types" }
 118.971643598s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace - with + in parse_datetime_value"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git_perf_cli_types@0.1.1
 119.223166274s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace - with + in parse_datetime_value"}:run{phase=Check}: cargo_mutants::cargo: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/cargo.rs:68: process_status=Success elapsed=251.535224ms
 119.223241631s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace - with + in parse_datetime_value"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:233: Revert mutant self=Mutant { function: Some(Function { function_name: "parse_datetime_value", return_type: "-> Result<DateTime<Utc>>", span: Span(271, 1, 285, 2) }), replacement: "+", genre: BinaryOperator, span: Span(284, 13, 284, 14), short_replaced: None, package_name: "git_perf_cli_types" }
 119.223901785s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="cli_types/src/lib.rs: replace - with + in parse_datetime_value"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:318: outcome=Success
 119.224330096s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/measurement_retrieval.rs: replace <impl MeasurementReducer<'a> for T>::reduce_by -> Option<MeasurementSummary> with Some(Default::default())"}: cargo_mutants::lab: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/lab.rs:267: test_packages=Explicit([Package { name: "git-perf", version: "0.17.2", relative_dir: "git_perf", top_sources: ["git_perf/src/lib.rs", "git_perf/src/main.rs"] }])
 119.224497979s TRACE worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/measurement_retrieval.rs: replace <impl MeasurementReducer<'a> for T>::reduce_by -> Option<MeasurementSummary> with Some(Default::default())"}: cargo_mutants::mutant: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/mutant.rs:228: Apply mutant self=Mutant { function: Some(Function { function_name: "<impl MeasurementReducer<'a> for T>::reduce_by", return_type: "-> Option<MeasurementSummary>", span: Span(60, 5, 74, 6) }), replacement: "Some(Default::default())", genre: FnValue, span: Span(61, 9, 73, 11), short_replaced: None, package_name: "git-perf" }
 119.224603792s DEBUG worker thread{build_dir="/tmp/cargo-mutants-repo-l6y6pT.tmp"}:mutant{name="git_perf/src/measurement_retrieval.rs: replace <impl MeasurementReducer<'a> for T>::reduce_by -> Option<MeasurementSummary> with Some(Default::default())"}:run{phase=Check}: cargo_mutants::process: /root/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cargo-mutants-25.3.1/src/process.rs:81: start process quoted_argv=/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo check --tests --verbose --package=git-perf@0.17.2
