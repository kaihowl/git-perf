[
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "raw_push",
      "return_type": "-> Result<(), GitError>",
      "span": {
        "start": {
          "line": 495,
          "column": 1
        },
        "end": {
          "line": 542,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 520,
        "column": 24
      },
      "end": {
        "line": 520,
        "column": 26
      }
    },
    "replacement": "||",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "Stats::z_score_with_method",
      "return_type": "-> f64",
      "span": {
        "start": {
          "line": 106,
          "column": 5
        },
        "end": {
          "line": 117,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 116,
        "column": 20
      },
      "end": {
        "line": 116,
        "column": 21
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "parse_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 169,
          "column": 1
        },
        "end": {
          "line": 178,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 170,
        "column": 5
      },
      "end": {
        "line": 177,
        "column": 6
      }
    },
    "replacement": "Ok((1, 0, 1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "get_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 180,
          "column": 1
        },
        "end": {
          "line": 185,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 181,
        "column": 5
      },
      "end": {
        "line": 184,
        "column": 32
      }
    },
    "replacement": "Ok((1, 0, 1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "map_git_error",
      "return_type": "-> GitError",
      "span": {
        "start": {
          "line": 96,
          "column": 1
        },
        "end": {
          "line": 114,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 103,
        "column": 55
      },
      "end": {
        "line": 103,
        "column": 93
      }
    },
    "replacement": "false",
    "genre": "MatchArmGuard"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "feed_git_command",
      "return_type": "-> Result<GitOutput, GitError>",
      "span": {
        "start": {
          "line": 55,
          "column": 1
        },
        "end": {
          "line": 94,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 60,
        "column": 5
      },
      "end": {
        "line": 93,
        "column": 6
      }
    },
    "replacement": "Ok(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "walk_commits",
      "return_type": "-> Result<Vec<(String, Vec<String>)>>",
      "span": {
        "start": {
          "line": 707,
          "column": 1
        },
        "end": {
          "line": 757,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 709,
        "column": 5
      },
      "end": {
        "line": 756,
        "column": 16
      }
    },
    "replacement": "Ok(vec![(\"xyzzy\".into(), vec![\"xyzzy\".into()])])",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "pull_internal",
      "return_type": "-> Result<(), GitError>",
      "span": {
        "start": {
          "line": 764,
          "column": 1
        },
        "end": {
          "line": 775,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 770,
        "column": 9
      },
      "end": {
        "line": 770,
        "column": 97
      }
    },
    "replacement": "",
    "genre": "MatchArm"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "PlotlyReporter::convert_to_x_y",
      "return_type": "-> (Vec<usize>, Vec<f64>)",
      "span": {
        "start": {
          "line": 55,
          "column": 5
        },
        "end": {
          "line": 60,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 56,
        "column": 9
      },
      "end": {
        "line": 59,
        "column": 21
      }
    },
    "replacement": "(vec![0], vec![-1.0])",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "create_temp_ref",
      "return_type": "-> Result<String, GitError>",
      "span": {
        "start": {
          "line": 237,
          "column": 1
        },
        "end": {
          "line": 252,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 239,
        "column": 21
      },
      "end": {
        "line": 239,
        "column": 23
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "<impl VecAggregation for Vec<f64>>::median",
      "return_type": "-> Option<f64>",
      "span": {
        "start": {
          "line": 121,
          "column": 5
        },
        "end": {
          "line": 132,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 126,
        "column": 38
      },
      "end": {
        "line": 126,
        "column": 39
      }
    },
    "replacement": "%",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/serialization.rs",
    "function": {
      "function_name": "deserialize_single",
      "return_type": "-> Option<MeasurementData>",
      "span": {
        "start": {
          "line": 41,
          "column": 1
        },
        "end": {
          "line": 127,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 42,
        "column": 5
      },
      "end": {
        "line": 126,
        "column": 7
      }
    },
    "replacement": "Some(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "<impl VecAggregation for Vec<f64>>::median",
      "return_type": "-> Option<f64>",
      "span": {
        "start": {
          "line": 121,
          "column": 5
        },
        "end": {
          "line": 132,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 128,
        "column": 37
      },
      "end": {
        "line": 128,
        "column": 38
      }
    },
    "replacement": "*",
    "genre": "BinaryOperator"
  },
  {
    "package": "git_perf_cli_types",
    "file": "cli_types/src/lib.rs",
    "function": {
      "function_name": "parse_key_value",
      "return_type": "-> Result<(String, String)>",
      "span": {
        "start": {
          "line": 250,
          "column": 1
        },
        "end": {
          "line": 257,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 251,
        "column": 5
      },
      "end": {
        "line": 256,
        "column": 21
      }
    },
    "replacement": "Ok((\"xyzzy\".into(), String::new()))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "report",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 253,
          "column": 1
        },
        "end": {
          "line": 363,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 275,
        "column": 58
      },
      "end": {
        "line": 275,
        "column": 60
      }
    },
    "replacement": "!=",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/serialization.rs",
    "function": {
      "function_name": "deserialize_single",
      "return_type": "-> Option<MeasurementData>",
      "span": {
        "start": {
          "line": 41,
          "column": 1
        },
        "end": {
          "line": 127,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 48,
        "column": 23
      },
      "end": {
        "line": 48,
        "column": 24
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "get_head_revision",
      "return_type": "-> Result<String>",
      "span": {
        "start": {
          "line": 141,
          "column": 1
        },
        "end": {
          "line": 143,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 142,
        "column": 5
      },
      "end": {
        "line": 142,
        "column": 38
      }
    },
    "replacement": "Ok(String::new())",
    "genre": "FnValue"
  },
  {
    "package": "git_perf_cli_types",
    "file": "cli_types/src/lib.rs",
    "function": {
      "function_name": "parse_spaceless_string",
      "return_type": "-> Result<String>",
      "span": {
        "start": {
          "line": 259,
          "column": 1
        },
        "end": {
          "line": 265,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 260,
        "column": 5
      },
      "end": {
        "line": 264,
        "column": 6
      }
    },
    "replacement": "Ok(String::new())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit",
      "return_type": "-> Result<AuditResult>",
      "span": {
        "start": {
          "line": 77,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 156,
        "column": 50
      },
      "end": {
        "line": 156,
        "column": 51
      }
    },
    "replacement": ">",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "report",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 253,
          "column": 1
        },
        "end": {
          "line": 363,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 269,
        "column": 42
      },
      "end": {
        "line": 269,
        "column": 44
      }
    },
    "replacement": "||",
    "genre": "BinaryOperator"
  },
  {
    "package": "git_perf_cli_types",
    "file": "cli_types/src/lib.rs",
    "function": {
      "function_name": "parse_datetime_value",
      "return_type": "-> Result<DateTime<Utc>>",
      "span": {
        "start": {
          "line": 271,
          "column": 1
        },
        "end": {
          "line": 285,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 272,
        "column": 5
      },
      "end": {
        "line": 284,
        "column": 26
      }
    },
    "replacement": "Ok(DateTime::from_iter([Default::default()]))",
    "genre": "FnValue"
  },
  {
    "package": "git_perf_cli_types",
    "file": "cli_types/src/lib.rs",
    "function": {
      "function_name": "parse_key_value",
      "return_type": "-> Result<(String, String)>",
      "span": {
        "start": {
          "line": 250,
          "column": 1
        },
        "end": {
          "line": 257,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 255,
        "column": 47
      },
      "end": {
        "line": 255,
        "column": 48
      }
    },
    "replacement": "-",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "raw_add_note_line_to_head",
      "return_type": "-> Result<(), GitError>",
      "span": {
        "start": {
          "line": 91,
          "column": 1
        },
        "end": {
          "line": 141,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 92,
        "column": 5
      },
      "end": {
        "line": 140,
        "column": 11
      }
    },
    "replacement": "Ok(())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "parse_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 169,
          "column": 1
        },
        "end": {
          "line": 178,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 170,
        "column": 5
      },
      "end": {
        "line": 177,
        "column": 6
      }
    },
    "replacement": "Ok((0, -1, 0))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "calculate_mad",
      "return_type": "-> f64",
      "span": {
        "start": {
          "line": 64,
          "column": 1
        },
        "end": {
          "line": 78,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 65,
        "column": 5
      },
      "end": {
        "line": 77,
        "column": 37
      }
    },
    "replacement": "1.0",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "report",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 253,
          "column": 1
        },
        "end": {
          "line": 363,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 261,
        "column": 5
      },
      "end": {
        "line": 362,
        "column": 11
      }
    },
    "replacement": "Ok(())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "push",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 777,
          "column": 1
        },
        "end": {
          "line": 802,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 778,
        "column": 5
      },
      "end": {
        "line": 801,
        "column": 11
      }
    },
    "replacement": "Ok(())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "raw_prune",
      "return_type": "-> Result<(), GitError>",
      "span": {
        "start": {
          "line": 604,
          "column": 1
        },
        "end": {
          "line": 644,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 605,
        "column": 5
      },
      "end": {
        "line": 643,
        "column": 11
      }
    },
    "replacement": "Ok(())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "PlotlyReporter::convert_to_x_y",
      "return_type": "-> (Vec<usize>, Vec<f64>)",
      "span": {
        "start": {
          "line": 55,
          "column": 5
        },
        "end": {
          "line": 60,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 58,
        "column": 38
      },
      "end": {
        "line": 58,
        "column": 39
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "<impl VecAggregation for Vec<f64>>::median",
      "return_type": "-> Option<f64>",
      "span": {
        "start": {
          "line": 121,
          "column": 5
        },
        "end": {
          "line": 132,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 128,
        "column": 28
      },
      "end": {
        "line": 128,
        "column": 29
      }
    },
    "replacement": "-",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/serialization.rs",
    "function": {
      "function_name": "deserialize_single",
      "return_type": "-> Option<MeasurementData>",
      "span": {
        "start": {
          "line": 41,
          "column": 1
        },
        "end": {
          "line": 127,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 91,
        "column": 36
      },
      "end": {
        "line": 91,
        "column": 38
      }
    },
    "replacement": "!=",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "<impl VecAggregation for Vec<f64>>::median",
      "return_type": "-> Option<f64>",
      "span": {
        "start": {
          "line": 121,
          "column": 5
        },
        "end": {
          "line": 132,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 122,
        "column": 9
      },
      "end": {
        "line": 131,
        "column": 10
      }
    },
    "replacement": "Some(0.0)",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "<impl Reporter<'a> for PlotlyReporter>::as_bytes",
      "return_type": "-> Vec<u8>",
      "span": {
        "start": {
          "line": 142,
          "column": 5
        },
        "end": {
          "line": 144,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 143,
        "column": 9
      },
      "end": {
        "line": 143,
        "column": 48
      }
    },
    "replacement": "vec![0]",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/config.rs",
    "function": {
      "function_name": "determine_epoch_from_config",
      "return_type": "-> Option<u32>",
      "span": {
        "start": {
          "line": 125,
          "column": 1
        },
        "end": {
          "line": 137,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 126,
        "column": 5
      },
      "end": {
        "line": 136,
        "column": 56
      }
    },
    "replacement": "None",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/serialization.rs",
    "function": {
      "function_name": "deserialize_single",
      "return_type": "-> Option<MeasurementData>",
      "span": {
        "start": {
          "line": 41,
          "column": 1
        },
        "end": {
          "line": 127,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 48,
        "column": 23
      },
      "end": {
        "line": 48,
        "column": 24
      }
    },
    "replacement": "<=",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit_multiple",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 41,
          "column": 1
        },
        "end": {
          "line": 75,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 50,
        "column": 5
      },
      "end": {
        "line": 74,
        "column": 11
      }
    },
    "replacement": "Ok(())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit",
      "return_type": "-> Result<AuditResult>",
      "span": {
        "start": {
          "line": 77,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 150,
        "column": 41
      },
      "end": {
        "line": 150,
        "column": 42
      }
    },
    "replacement": "*",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/config.rs",
    "function": {
      "function_name": "read_config_from_file",
      "return_type": "-> Result<String>",
      "span": {
        "start": {
          "line": 119,
          "column": 1
        },
        "end": {
          "line": 123,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 120,
        "column": 5
      },
      "end": {
        "line": 122,
        "column": 17
      }
    },
    "replacement": "Ok(\"xyzzy\".into())",
    "genre": "FnValue"
  },
  {
    "package": "git_perf_cli_types",
    "file": "cli_types/src/lib.rs",
    "function": {
      "function_name": "<impl FromStr for DispersionMethod>::from_str",
      "return_type": "-> Result<Self, Self::Err>",
      "span": {
        "start": {
          "line": 28,
          "column": 5
        },
        "end": {
          "line": 37,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 30,
        "column": 13
      },
      "end": {
        "line": 30,
        "column": 65
      }
    },
    "replacement": "",
    "genre": "MatchArm"
  },
  {
    "package": "git_perf_cli_types",
    "file": "cli_types/src/lib.rs",
    "function": {
      "function_name": "<impl FromStr for DispersionMethod>::from_str",
      "return_type": "-> Result<Self, Self::Err>",
      "span": {
        "start": {
          "line": 28,
          "column": 5
        },
        "end": {
          "line": 37,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 29,
        "column": 9
      },
      "end": {
        "line": 36,
        "column": 10
      }
    },
    "replacement": "Ok(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "<impl VecAggregation for Vec<f64>>::median",
      "return_type": "-> Option<f64>",
      "span": {
        "start": {
          "line": 121,
          "column": 5
        },
        "end": {
          "line": 132,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 128,
        "column": 28
      },
      "end": {
        "line": 128,
        "column": 29
      }
    },
    "replacement": "*",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "parse_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 169,
          "column": 1
        },
        "end": {
          "line": 178,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 170,
        "column": 5
      },
      "end": {
        "line": 177,
        "column": 6
      }
    },
    "replacement": "Ok((-1, 0, 1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/config.rs",
    "function": {
      "function_name": "find_config_path",
      "return_type": "-> Option<PathBuf>",
      "span": {
        "start": {
          "line": 109,
          "column": 1
        },
        "end": {
          "line": 117,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 111,
        "column": 5
      },
      "end": {
        "line": 116,
        "column": 6
      }
    },
    "replacement": "Some(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "git_perf_cli_types",
    "file": "cli_types/src/lib.rs",
    "function": {
      "function_name": "parse_datetime_value",
      "return_type": "-> Result<DateTime<Utc>>",
      "span": {
        "start": {
          "line": 271,
          "column": 1
        },
        "end": {
          "line": 285,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 276,
        "column": 50
      },
      "end": {
        "line": 276,
        "column": 51
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/serialization.rs",
    "function": {
      "function_name": "deserialize",
      "return_type": "-> Vec<MeasurementData>",
      "span": {
        "start": {
          "line": 129,
          "column": 1
        },
        "end": {
          "line": 135,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 130,
        "column": 5
      },
      "end": {
        "line": 134,
        "column": 23
      }
    },
    "replacement": "vec![Default::default()]",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "update_read_branch",
      "return_type": "-> Result<TempRef, GitError>",
      "span": {
        "start": {
          "line": 684,
          "column": 1
        },
        "end": {
          "line": 705,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 685,
        "column": 5
      },
      "end": {
        "line": 704,
        "column": 17
      }
    },
    "replacement": "Ok(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/serialization.rs",
    "function": {
      "function_name": "serialize_single",
      "return_type": "-> String",
      "span": {
        "start": {
          "line": 16,
          "column": 1
        },
        "end": {
          "line": 32,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 20,
        "column": 5
      },
      "end": {
        "line": 31,
        "column": 36
      }
    },
    "replacement": "String::new()",
    "genre": "FnValue"
  },
  {
    "package": "git_perf_cli_types",
    "file": "cli_types/src/lib.rs",
    "function": {
      "function_name": "parse_datetime_value",
      "return_type": "-> Result<DateTime<Utc>>",
      "span": {
        "start": {
          "line": 271,
          "column": 1
        },
        "end": {
          "line": 285,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 284,
        "column": 13
      },
      "end": {
        "line": 284,
        "column": 14
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/measurement_retrieval.rs",
    "function": {
      "function_name": "<impl MeasurementReducer<'a> for T>::reduce_by",
      "return_type": "-> Option<MeasurementSummary>",
      "span": {
        "start": {
          "line": 60,
          "column": 5
        },
        "end": {
          "line": 74,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 61,
        "column": 9
      },
      "end": {
        "line": 73,
        "column": 11
      }
    },
    "replacement": "Some(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "git_perf_cli_types",
    "file": "cli_types/src/lib.rs",
    "function": {
      "function_name": "parse_datetime_value",
      "return_type": "-> Result<DateTime<Utc>>",
      "span": {
        "start": {
          "line": 271,
          "column": 1
        },
        "end": {
          "line": 285,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 272,
        "column": 5
      },
      "end": {
        "line": 284,
        "column": 26
      }
    },
    "replacement": "Ok(DateTime::new())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/config.rs",
    "function": {
      "function_name": "determine_epoch_from_config",
      "return_type": "-> Option<u32>",
      "span": {
        "start": {
          "line": 125,
          "column": 1
        },
        "end": {
          "line": 137,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 126,
        "column": 5
      },
      "end": {
        "line": 136,
        "column": 56
      }
    },
    "replacement": "Some(1)",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "walk_commits",
      "return_type": "-> Result<Vec<(String, Vec<String>)>>",
      "span": {
        "start": {
          "line": 707,
          "column": 1
        },
        "end": {
          "line": 757,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 709,
        "column": 5
      },
      "end": {
        "line": 756,
        "column": 16
      }
    },
    "replacement": "Ok(vec![(\"xyzzy\".into(), vec![])])",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "add_note_line_to_head",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 72,
          "column": 1
        },
        "end": {
          "line": 89,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 73,
        "column": 5
      },
      "end": {
        "line": 88,
        "column": 11
      }
    },
    "replacement": "Ok(())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "get_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 180,
          "column": 1
        },
        "end": {
          "line": 185,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 181,
        "column": 5
      },
      "end": {
        "line": 184,
        "column": 32
      }
    },
    "replacement": "Ok((-1, -1, -1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "PlotlyReporter::convert_to_x_y",
      "return_type": "-> (Vec<usize>, Vec<f64>)",
      "span": {
        "start": {
          "line": 55,
          "column": 5
        },
        "end": {
          "line": 60,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 56,
        "column": 9
      },
      "end": {
        "line": 59,
        "column": 21
      }
    },
    "replacement": "(vec![], vec![1.0])",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "parse_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 169,
          "column": 1
        },
        "end": {
          "line": 178,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 170,
        "column": 5
      },
      "end": {
        "line": 177,
        "column": 6
      }
    },
    "replacement": "Ok((1, 0, -1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "get_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 180,
          "column": 1
        },
        "end": {
          "line": 185,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 181,
        "column": 5
      },
      "end": {
        "line": 184,
        "column": 32
      }
    },
    "replacement": "Ok((-1, 1, 0))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit",
      "return_type": "-> Result<AuditResult>",
      "span": {
        "start": {
          "line": 77,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 181,
        "column": 41
      },
      "end": {
        "line": 181,
        "column": 43
      }
    },
    "replacement": "&&",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "create_temp_ref",
      "return_type": "-> Result<String, GitError>",
      "span": {
        "start": {
          "line": 237,
          "column": 1
        },
        "end": {
          "line": 252,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 238,
        "column": 5
      },
      "end": {
        "line": 251,
        "column": 15
      }
    },
    "replacement": "Ok(String::new())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit",
      "return_type": "-> Result<AuditResult>",
      "span": {
        "start": {
          "line": 77,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 146,
        "column": 9
      },
      "end": {
        "line": 146,
        "column": 10
      }
    },
    "replacement": "%",
    "genre": "BinaryOperator"
  },
  {
    "package": "git_perf_cli_types",
    "file": "cli_types/src/lib.rs",
    "function": {
      "function_name": "parse_datetime_value",
      "return_type": "-> Result<DateTime<Utc>>",
      "span": {
        "start": {
          "line": 271,
          "column": 1
        },
        "end": {
          "line": 285,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 279,
        "column": 9
      },
      "end": {
        "line": 279,
        "column": 37
      }
    },
    "replacement": "",
    "genre": "MatchArm"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/config.rs",
    "function": {
      "function_name": "audit_min_relative_deviation",
      "return_type": "-> Option<f64>",
      "span": {
        "start": {
          "line": 176,
          "column": 1
        },
        "end": {
          "line": 189,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 178,
        "column": 5
      },
      "end": {
        "line": 188,
        "column": 9
      }
    },
    "replacement": "Some(1.0)",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "Stats::z_score_with_method",
      "return_type": "-> f64",
      "span": {
        "start": {
          "line": 106,
          "column": 5
        },
        "end": {
          "line": 117,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 116,
        "column": 20
      },
      "end": {
        "line": 116,
        "column": 21
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit",
      "return_type": "-> Result<AuditResult>",
      "span": {
        "start": {
          "line": 77,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 140,
        "column": 9
      },
      "end": {
        "line": 140,
        "column": 10
      }
    },
    "replacement": "%",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/config.rs",
    "function": {
      "function_name": "bump_epoch",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 152,
          "column": 1
        },
        "end": {
          "line": 160,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 154,
        "column": 5
      },
      "end": {
        "line": 159,
        "column": 11
      }
    },
    "replacement": "Ok(())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit",
      "return_type": "-> Result<AuditResult>",
      "span": {
        "start": {
          "line": 77,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 178,
        "column": 41
      },
      "end": {
        "line": 178,
        "column": 42
      }
    },
    "replacement": ">=",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "walk_commits",
      "return_type": "-> Result<Vec<(String, Vec<String>)>>",
      "span": {
        "start": {
          "line": 707,
          "column": 1
        },
        "end": {
          "line": 757,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 709,
        "column": 5
      },
      "end": {
        "line": 756,
        "column": 16
      }
    },
    "replacement": "Ok(vec![(\"xyzzy\".into(), vec![String::new()])])",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/serialization.rs",
    "function": {
      "function_name": "deserialize_single",
      "return_type": "-> Option<MeasurementData>",
      "span": {
        "start": {
          "line": 41,
          "column": 1
        },
        "end": {
          "line": 127,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 84,
        "column": 25
      },
      "end": {
        "line": 84,
        "column": 26
      }
    },
    "replacement": ">=",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "parse_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 169,
          "column": 1
        },
        "end": {
          "line": 178,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 170,
        "column": 5
      },
      "end": {
        "line": 177,
        "column": 6
      }
    },
    "replacement": "Ok((-1, 0, -1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/config.rs",
    "function": {
      "function_name": "backoff_max_elapsed_seconds",
      "return_type": "-> u64",
      "span": {
        "start": {
          "line": 162,
          "column": 1
        },
        "end": {
          "line": 174,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 164,
        "column": 5
      },
      "end": {
        "line": 173,
        "column": 6
      }
    },
    "replacement": "0",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "get_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 180,
          "column": 1
        },
        "end": {
          "line": 185,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 181,
        "column": 5
      },
      "end": {
        "line": 184,
        "column": 32
      }
    },
    "replacement": "Ok((0, 1, 1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "PlotlyReporter::convert_to_x_y",
      "return_type": "-> (Vec<usize>, Vec<f64>)",
      "span": {
        "start": {
          "line": 55,
          "column": 5
        },
        "end": {
          "line": 60,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 58,
        "column": 38
      },
      "end": {
        "line": 58,
        "column": 39
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit",
      "return_type": "-> Result<AuditResult>",
      "span": {
        "start": {
          "line": 77,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 156,
        "column": 50
      },
      "end": {
        "line": 156,
        "column": 51
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "calculate_mad",
      "return_type": "-> f64",
      "span": {
        "start": {
          "line": 64,
          "column": 1
        },
        "end": {
          "line": 78,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 74,
        "column": 72
      },
      "end": {
        "line": 74,
        "column": 73
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "parse_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 169,
          "column": 1
        },
        "end": {
          "line": 178,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 170,
        "column": 5
      },
      "end": {
        "line": 177,
        "column": 6
      }
    },
    "replacement": "Ok((-1, 1, 1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "walk_commits",
      "return_type": "-> Result<Vec<(String, Vec<String>)>>",
      "span": {
        "start": {
          "line": 707,
          "column": 1
        },
        "end": {
          "line": 757,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 752,
        "column": 42
      },
      "end": {
        "line": 752,
        "column": 43
      }
    },
    "replacement": ">",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit",
      "return_type": "-> Result<AuditResult>",
      "span": {
        "start": {
          "line": 77,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 147,
        "column": 9
      },
      "end": {
        "line": 147,
        "column": 10
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/config.rs",
    "function": {
      "function_name": "determine_epoch_from_config",
      "return_type": "-> Option<u32>",
      "span": {
        "start": {
          "line": 125,
          "column": 1
        },
        "end": {
          "line": 137,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 126,
        "column": 5
      },
      "end": {
        "line": 136,
        "column": 56
      }
    },
    "replacement": "Some(0)",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "<impl VecAggregation for Vec<f64>>::median",
      "return_type": "-> Option<f64>",
      "span": {
        "start": {
          "line": 121,
          "column": 5
        },
        "end": {
          "line": 132,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 122,
        "column": 9
      },
      "end": {
        "line": 131,
        "column": 10
      }
    },
    "replacement": "Some(1.0)",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "parse_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 169,
          "column": 1
        },
        "end": {
          "line": 178,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 170,
        "column": 5
      },
      "end": {
        "line": 177,
        "column": 6
      }
    },
    "replacement": "Ok((-1, 1, -1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "get_refs",
      "return_type": "-> Result<Vec<Reference>, GitError>",
      "span": {
        "start": {
          "line": 646,
          "column": 1
        },
        "end": {
          "line": 663,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 647,
        "column": 5
      },
      "end": {
        "line": 662,
        "column": 24
      }
    },
    "replacement": "Ok(vec![])",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "raw_push",
      "return_type": "-> Result<(), GitError>",
      "span": {
        "start": {
          "line": 495,
          "column": 1
        },
        "end": {
          "line": 542,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 496,
        "column": 5
      },
      "end": {
        "line": 541,
        "column": 11
      }
    },
    "replacement": "Ok(())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/measurement_retrieval.rs",
    "function": {
      "function_name": "take_while_same_epoch",
      "return_type": "-> impl Iterator<Item = Result<CommitSummary>>",
      "span": {
        "start": {
          "line": 37,
          "column": 1
        },
        "end": {
          "line": 54,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 50,
        "column": 43
      },
      "end": {
        "line": 50,
        "column": 45
      }
    },
    "replacement": "!=",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "get_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 180,
          "column": 1
        },
        "end": {
          "line": 185,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 181,
        "column": 5
      },
      "end": {
        "line": 184,
        "column": 32
      }
    },
    "replacement": "Ok((0, 1, 0))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "PlotlyReporter::convert_to_x_y",
      "return_type": "-> (Vec<usize>, Vec<f64>)",
      "span": {
        "start": {
          "line": 55,
          "column": 5
        },
        "end": {
          "line": 60,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 56,
        "column": 9
      },
      "end": {
        "line": 59,
        "column": 21
      }
    },
    "replacement": "(vec![0], vec![1.0])",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/config.rs",
    "function": {
      "function_name": "write_config",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 66,
          "column": 1
        },
        "end": {
          "line": 72,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 68,
        "column": 5
      },
      "end": {
        "line": 71,
        "column": 11
      }
    },
    "replacement": "Ok(())",
    "genre": "FnValue"
  },
  {
    "package": "git_perf_cli_types",
    "file": "cli_types/src/lib.rs",
    "function": {
      "function_name": "parse_key_value",
      "return_type": "-> Result<(String, String)>",
      "span": {
        "start": {
          "line": 250,
          "column": 1
        },
        "end": {
          "line": 257,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 251,
        "column": 5
      },
      "end": {
        "line": 256,
        "column": 21
      }
    },
    "replacement": "Ok((\"xyzzy\".into(), \"xyzzy\".into()))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "Stats::z_score",
      "return_type": "-> f64",
      "span": {
        "start": {
          "line": 102,
          "column": 5
        },
        "end": {
          "line": 104,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 103,
        "column": 9
      },
      "end": {
        "line": 103,
        "column": 77
      }
    },
    "replacement": "-1.0",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "Stats::z_score_with_method",
      "return_type": "-> f64",
      "span": {
        "start": {
          "line": 106,
          "column": 5
        },
        "end": {
          "line": 117,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 107,
        "column": 9
      },
      "end": {
        "line": 116,
        "column": 52
      }
    },
    "replacement": "1.0",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "<impl VecAggregation for Vec<f64>>::median",
      "return_type": "-> Option<f64>",
      "span": {
        "start": {
          "line": 121,
          "column": 5
        },
        "end": {
          "line": 132,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 125,
        "column": 21
      },
      "end": {
        "line": 125,
        "column": 34
      }
    },
    "replacement": "false",
    "genre": "MatchArmGuard"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "get_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 180,
          "column": 1
        },
        "end": {
          "line": 185,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 181,
        "column": 5
      },
      "end": {
        "line": 184,
        "column": 32
      }
    },
    "replacement": "Ok((-1, 1, -1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "get_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 180,
          "column": 1
        },
        "end": {
          "line": 185,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 181,
        "column": 5
      },
      "end": {
        "line": 184,
        "column": 32
      }
    },
    "replacement": "Ok((0, -1, -1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "PlotlyReporter::convert_to_x_y",
      "return_type": "-> (Vec<usize>, Vec<f64>)",
      "span": {
        "start": {
          "line": 55,
          "column": 5
        },
        "end": {
          "line": 60,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 56,
        "column": 9
      },
      "end": {
        "line": 59,
        "column": 21
      }
    },
    "replacement": "(vec![1], vec![])",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "git_push_notes_ref",
      "return_type": "-> Result<(), GitError>",
      "span": {
        "start": {
          "line": 544,
          "column": 1
        },
        "end": {
          "line": 584,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 572,
        "column": 70
      },
      "end": {
        "line": 572,
        "column": 72
      }
    },
    "replacement": "||",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "<impl VecAggregation for Vec<f64>>::median",
      "return_type": "-> Option<f64>",
      "span": {
        "start": {
          "line": 121,
          "column": 5
        },
        "end": {
          "line": 132,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 125,
        "column": 21
      },
      "end": {
        "line": 125,
        "column": 34
      }
    },
    "replacement": "true",
    "genre": "MatchArmGuard"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "check_git_version",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 194,
          "column": 1
        },
        "end": {
          "line": 204,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 195,
        "column": 5
      },
      "end": {
        "line": 203,
        "column": 11
      }
    },
    "replacement": "Ok(())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "get_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 180,
          "column": 1
        },
        "end": {
          "line": 185,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 181,
        "column": 5
      },
      "end": {
        "line": 184,
        "column": 32
      }
    },
    "replacement": "Ok((-1, 1, 1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit",
      "return_type": "-> Result<AuditResult>",
      "span": {
        "start": {
          "line": 77,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 150,
        "column": 55
      },
      "end": {
        "line": 150,
        "column": 56
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "create_temp_ref",
      "return_type": "-> Result<String, GitError>",
      "span": {
        "start": {
          "line": 237,
          "column": 1
        },
        "end": {
          "line": 252,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 238,
        "column": 5
      },
      "end": {
        "line": 251,
        "column": 15
      }
    },
    "replacement": "Ok(\"xyzzy\".into())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "create_temp_add_head",
      "return_type": "-> Result<String, GitError>",
      "span": {
        "start": {
          "line": 258,
          "column": 1
        },
        "end": {
          "line": 260,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 259,
        "column": 5
      },
      "end": {
        "line": 259,
        "column": 70
      }
    },
    "replacement": "Ok(\"xyzzy\".into())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "new_symbolic_write_ref",
      "return_type": "-> Result<String, GitError>",
      "span": {
        "start": {
          "line": 428,
          "column": 1
        },
        "end": {
          "line": 442,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 429,
        "column": 5
      },
      "end": {
        "line": 441,
        "column": 15
      }
    },
    "replacement": "Ok(String::new())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/serialization.rs",
    "function": {
      "function_name": "deserialize_single",
      "return_type": "-> Option<MeasurementData>",
      "span": {
        "start": {
          "line": 41,
          "column": 1
        },
        "end": {
          "line": 127,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 84,
        "column": 25
      },
      "end": {
        "line": 84,
        "column": 26
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "walk_commits",
      "return_type": "-> Result<Vec<(String, Vec<String>)>>",
      "span": {
        "start": {
          "line": 707,
          "column": 1
        },
        "end": {
          "line": 757,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 752,
        "column": 42
      },
      "end": {
        "line": 752,
        "column": 43
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "format_z_score_display",
      "return_type": "-> String",
      "span": {
        "start": {
          "line": 14,
          "column": 1
        },
        "end": {
          "line": 23,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 18,
        "column": 5
      },
      "end": {
        "line": 22,
        "column": 6
      }
    },
    "replacement": "\"xyzzy\".into()",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "parse_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 169,
          "column": 1
        },
        "end": {
          "line": 178,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 170,
        "column": 5
      },
      "end": {
        "line": 177,
        "column": 6
      }
    },
    "replacement": "Ok((0, -1, -1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "Stats::z_score_with_method",
      "return_type": "-> f64",
      "span": {
        "start": {
          "line": 106,
          "column": 5
        },
        "end": {
          "line": 117,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 107,
        "column": 9
      },
      "end": {
        "line": 116,
        "column": 52
      }
    },
    "replacement": "-1.0",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/config.rs",
    "function": {
      "function_name": "get_main_config_path",
      "return_type": "-> Result<PathBuf>",
      "span": {
        "start": {
          "line": 47,
          "column": 1
        },
        "end": {
          "line": 64,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 50,
        "column": 5
      },
      "end": {
        "line": 63,
        "column": 56
      }
    },
    "replacement": "Ok(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "map_git_error",
      "return_type": "-> GitError",
      "span": {
        "start": {
          "line": 96,
          "column": 1
        },
        "end": {
          "line": 114,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 100,
        "column": 55
      },
      "end": {
        "line": 100,
        "column": 96
      }
    },
    "replacement": "false",
    "genre": "MatchArmGuard"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/config.rs",
    "function": {
      "function_name": "audit_dispersion_method",
      "return_type": "-> DispersionMethod",
      "span": {
        "start": {
          "line": 191,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 193,
        "column": 5
      },
      "end": {
        "line": 206,
        "column": 40
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "create_temp_rewrite_head",
      "return_type": "-> Result<String, GitError>",
      "span": {
        "start": {
          "line": 254,
          "column": 1
        },
        "end": {
          "line": 256,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 255,
        "column": 5
      },
      "end": {
        "line": 255,
        "column": 74
      }
    },
    "replacement": "Ok(\"xyzzy\".into())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "ReporterFactory::from_file_name",
      "return_type": "-> Option<Box<dyn Reporter<'_>+'_>>",
      "span": {
        "start": {
          "line": 236,
          "column": 5
        },
        "end": {
          "line": 250,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 244,
        "column": 17
      },
      "end": {
        "line": 244,
        "column": 90
      }
    },
    "replacement": "",
    "genre": "MatchArm"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "Stats::z_score",
      "return_type": "-> f64",
      "span": {
        "start": {
          "line": 102,
          "column": 5
        },
        "end": {
          "line": 104,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 103,
        "column": 9
      },
      "end": {
        "line": 103,
        "column": 77
      }
    },
    "replacement": "0.0",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit",
      "return_type": "-> Result<AuditResult>",
      "span": {
        "start": {
          "line": 77,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 150,
        "column": 68
      },
      "end": {
        "line": 150,
        "column": 69
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/cli.rs",
    "function": {
      "function_name": "handle_calls",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 17,
          "column": 1
        },
        "end": {
          "line": 90,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 69,
        "column": 41
      },
      "end": {
        "line": 69,
        "column": 42
      }
    },
    "replacement": ">",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "remove_measurements_from_reference",
      "return_type": "-> Result<(), GitError>",
      "span": {
        "start": {
          "line": 347,
          "column": 1
        },
        "end": {
          "line": 426,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 391,
        "column": 34
      },
      "end": {
        "line": 391,
        "column": 36
      }
    },
    "replacement": ">",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "retry_notify",
      "return_type": "",
      "span": {
        "start": {
          "line": 288,
          "column": 1
        },
        "end": {
          "line": 291,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 289,
        "column": 5
      },
      "end": {
        "line": 290,
        "column": 26
      }
    },
    "replacement": "()",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "PlotlyReporter::convert_to_x_y",
      "return_type": "-> (Vec<usize>, Vec<f64>)",
      "span": {
        "start": {
          "line": 55,
          "column": 5
        },
        "end": {
          "line": 60,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 56,
        "column": 9
      },
      "end": {
        "line": 59,
        "column": 21
      }
    },
    "replacement": "(vec![], vec![])",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "ReporterFactory::from_file_name",
      "return_type": "-> Option<Box<dyn Reporter<'_>+'_>>",
      "span": {
        "start": {
          "line": 236,
          "column": 5
        },
        "end": {
          "line": 250,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 237,
        "column": 9
      },
      "end": {
        "line": 249,
        "column": 12
      }
    },
    "replacement": "None",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "parse_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 169,
          "column": 1
        },
        "end": {
          "line": 178,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 170,
        "column": 5
      },
      "end": {
        "line": 177,
        "column": 6
      }
    },
    "replacement": "Ok((0, -1, 1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "<impl VecAggregation for Vec<f64>>::median",
      "return_type": "-> Option<f64>",
      "span": {
        "start": {
          "line": 121,
          "column": 5
        },
        "end": {
          "line": 132,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 125,
        "column": 30
      },
      "end": {
        "line": 125,
        "column": 32
      }
    },
    "replacement": "!=",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "walk_commits",
      "return_type": "-> Result<Vec<(String, Vec<String>)>>",
      "span": {
        "start": {
          "line": 707,
          "column": 1
        },
        "end": {
          "line": 757,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 739,
        "column": 30
      },
      "end": {
        "line": 739,
        "column": 32
      }
    },
    "replacement": "&=",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "<impl VecAggregation for Vec<f64>>::median",
      "return_type": "-> Option<f64>",
      "span": {
        "start": {
          "line": 121,
          "column": 5
        },
        "end": {
          "line": 132,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 127,
        "column": 39
      },
      "end": {
        "line": 127,
        "column": 40
      }
    },
    "replacement": "*",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/measurement_retrieval.rs",
    "function": {
      "function_name": "take_while_same_epoch",
      "return_type": "-> impl Iterator<Item = Result<CommitSummary>>",
      "span": {
        "start": {
          "line": 37,
          "column": 1
        },
        "end": {
          "line": 54,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 42,
        "column": 5
      },
      "end": {
        "line": 53,
        "column": 7
      }
    },
    "replacement": "::std::iter::once(Ok(Default::default()))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "git_rev_parse_symbolic_ref",
      "return_type": "-> Option<String>",
      "span": {
        "start": {
          "line": 157,
          "column": 1
        },
        "end": {
          "line": 161,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 158,
        "column": 5
      },
      "end": {
        "line": 160,
        "column": 45
      }
    },
    "replacement": "Some(String::new())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "get_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 180,
          "column": 1
        },
        "end": {
          "line": 185,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 181,
        "column": 5
      },
      "end": {
        "line": 184,
        "column": 32
      }
    },
    "replacement": "Ok((0, 1, -1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "git_push_notes_ref",
      "return_type": "-> Result<(), GitError>",
      "span": {
        "start": {
          "line": 544,
          "column": 1
        },
        "end": {
          "line": 584,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 572,
        "column": 73
      },
      "end": {
        "line": 572,
        "column": 74
      }
    },
    "replacement": "",
    "genre": "UnaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit",
      "return_type": "-> Result<AuditResult>",
      "span": {
        "start": {
          "line": 77,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 90,
        "column": 13
      },
      "end": {
        "line": 90,
        "column": 15
      }
    },
    "replacement": "||",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "is_shallow_repo",
      "return_type": "-> Result<bool, GitError>",
      "span": {
        "start": {
          "line": 163,
          "column": 1
        },
        "end": {
          "line": 167,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 164,
        "column": 5
      },
      "end": {
        "line": 166,
        "column": 42
      }
    },
    "replacement": "Ok(false)",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "<impl Reporter<'a> for PlotlyReporter>::add_summarized_trace",
      "return_type": "",
      "span": {
        "start": {
          "line": 115,
          "column": 5
        },
        "end": {
          "line": 140,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 121,
        "column": 9
      },
      "end": {
        "line": 139,
        "column": 36
      }
    },
    "replacement": "()",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit",
      "return_type": "-> Result<AuditResult>",
      "span": {
        "start": {
          "line": 77,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 141,
        "column": 9
      },
      "end": {
        "line": 141,
        "column": 10
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "aggregate_measurements",
      "return_type": "-> Stats",
      "span": {
        "start": {
          "line": 53,
          "column": 1
        },
        "end": {
          "line": 62,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 54,
        "column": 5
      },
      "end": {
        "line": 61,
        "column": 6
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "get_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 180,
          "column": 1
        },
        "end": {
          "line": 185,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 181,
        "column": 5
      },
      "end": {
        "line": 184,
        "column": 32
      }
    },
    "replacement": "Ok((0, 0, -1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "get_direction_arrow",
      "return_type": "-> &'static str",
      "span": {
        "start": {
          "line": 25,
          "column": 1
        },
        "end": {
          "line": 33,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 28,
        "column": 5
      },
      "end": {
        "line": 32,
        "column": 6
      }
    },
    "replacement": "\"\"",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "Stats::z_score_with_method",
      "return_type": "-> f64",
      "span": {
        "start": {
          "line": 106,
          "column": 5
        },
        "end": {
          "line": 117,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 116,
        "column": 40
      },
      "end": {
        "line": 116,
        "column": 41
      }
    },
    "replacement": "*",
    "genre": "BinaryOperator"
  },
  {
    "package": "git_perf_cli_types",
    "file": "cli_types/src/lib.rs",
    "function": {
      "function_name": "parse_spaceless_string",
      "return_type": "-> Result<String>",
      "span": {
        "start": {
          "line": 259,
          "column": 1
        },
        "end": {
          "line": 265,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 260,
        "column": 37
      },
      "end": {
        "line": 260,
        "column": 38
      }
    },
    "replacement": "<",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/measurement_storage.rs",
    "function": {
      "function_name": "remove_measurements_from_commits",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 72,
          "column": 1
        },
        "end": {
          "line": 74,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 73,
        "column": 5
      },
      "end": {
        "line": 73,
        "column": 74
      }
    },
    "replacement": "Ok(())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "<impl Reporter<'a> for PlotlyReporter>::as_bytes",
      "return_type": "-> Vec<u8>",
      "span": {
        "start": {
          "line": 142,
          "column": 5
        },
        "end": {
          "line": 144,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 143,
        "column": 9
      },
      "end": {
        "line": 143,
        "column": 48
      }
    },
    "replacement": "vec![]",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "<impl From<git_perf_cli_types::ReductionFunc> for ReductionFunc>::from",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 24,
          "column": 5
        },
        "end": {
          "line": 31,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 25,
        "column": 9
      },
      "end": {
        "line": 30,
        "column": 10
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "<impl Reporter<'a> for PlotlyReporter>::add_trace",
      "return_type": "",
      "span": {
        "start": {
          "line": 88,
          "column": 5
        },
        "end": {
          "line": 113,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 94,
        "column": 9
      },
      "end": {
        "line": 112,
        "column": 36
      }
    },
    "replacement": "()",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/config.rs",
    "function": {
      "function_name": "read_config_from_file",
      "return_type": "-> Result<String>",
      "span": {
        "start": {
          "line": 119,
          "column": 1
        },
        "end": {
          "line": 123,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 120,
        "column": 5
      },
      "end": {
        "line": 122,
        "column": 17
      }
    },
    "replacement": "Ok(String::new())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "get_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 180,
          "column": 1
        },
        "end": {
          "line": 185,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 181,
        "column": 5
      },
      "end": {
        "line": 184,
        "column": 32
      }
    },
    "replacement": "Ok((1, 0, -1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "walk_commits",
      "return_type": "-> Result<Vec<(String, Vec<String>)>>",
      "span": {
        "start": {
          "line": 707,
          "column": 1
        },
        "end": {
          "line": 757,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 709,
        "column": 5
      },
      "end": {
        "line": 756,
        "column": 16
      }
    },
    "replacement": "Ok(vec![])",
    "genre": "FnValue"
  },
  {
    "package": "git_perf_cli_types",
    "file": "cli_types/src/lib.rs",
    "function": {
      "function_name": "parse_datetime_value",
      "return_type": "-> Result<DateTime<Utc>>",
      "span": {
        "start": {
          "line": 271,
          "column": 1
        },
        "end": {
          "line": 285,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 281,
        "column": 9
      },
      "end": {
        "line": 281,
        "column": 37
      }
    },
    "replacement": "",
    "genre": "MatchArm"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "parse_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 169,
          "column": 1
        },
        "end": {
          "line": 178,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 170,
        "column": 5
      },
      "end": {
        "line": 177,
        "column": 6
      }
    },
    "replacement": "Ok((-1, -1, 1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/measurement_storage.rs",
    "function": {
      "function_name": "add",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 49,
          "column": 1
        },
        "end": {
          "line": 70,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 50,
        "column": 5
      },
      "end": {
        "line": 69,
        "column": 11
      }
    },
    "replacement": "Ok(())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "<impl VecAggregation for Vec<f64>>::median",
      "return_type": "-> Option<f64>",
      "span": {
        "start": {
          "line": 121,
          "column": 5
        },
        "end": {
          "line": 132,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 125,
        "column": 26
      },
      "end": {
        "line": 125,
        "column": 27
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "parse_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 169,
          "column": 1
        },
        "end": {
          "line": 178,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 170,
        "column": 5
      },
      "end": {
        "line": 177,
        "column": 6
      }
    },
    "replacement": "Ok((-1, 0, 0))",
    "genre": "FnValue"
  },
  {
    "package": "git_perf_cli_types",
    "file": "cli_types/src/lib.rs",
    "function": {
      "function_name": "parse_datetime_value",
      "return_type": "-> Result<DateTime<Utc>>",
      "span": {
        "start": {
          "line": 271,
          "column": 1
        },
        "end": {
          "line": 285,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 272,
        "column": 5
      },
      "end": {
        "line": 284,
        "column": 26
      }
    },
    "replacement": "Ok(DateTime::new(Default::default()))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "report",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 253,
          "column": 1
        },
        "end": {
          "line": 363,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 295,
        "column": 44
      },
      "end": {
        "line": 295,
        "column": 46
      }
    },
    "replacement": "!=",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "get_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 180,
          "column": 1
        },
        "end": {
          "line": 185,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 181,
        "column": 5
      },
      "end": {
        "line": 184,
        "column": 32
      }
    },
    "replacement": "Ok((-1, 0, -1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "random_suffix",
      "return_type": "-> String",
      "span": {
        "start": {
          "line": 186,
          "column": 1
        },
        "end": {
          "line": 189,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 187,
        "column": 5
      },
      "end": {
        "line": 188,
        "column": 28
      }
    },
    "replacement": "\"xyzzy\".into()",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "ReporterFactory::from_file_name",
      "return_type": "-> Option<Box<dyn Reporter<'_>+'_>>",
      "span": {
        "start": {
          "line": 236,
          "column": 5
        },
        "end": {
          "line": 250,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 237,
        "column": 17
      },
      "end": {
        "line": 237,
        "column": 19
      }
    },
    "replacement": "!=",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "git_rev_parse_symbolic_ref",
      "return_type": "-> Option<String>",
      "span": {
        "start": {
          "line": 157,
          "column": 1
        },
        "end": {
          "line": 161,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 158,
        "column": 5
      },
      "end": {
        "line": 160,
        "column": 45
      }
    },
    "replacement": "Some(\"xyzzy\".into())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit",
      "return_type": "-> Result<AuditResult>",
      "span": {
        "start": {
          "line": 77,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 141,
        "column": 9
      },
      "end": {
        "line": 141,
        "column": 10
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "consolidate_write_branches_into",
      "return_type": "-> Result<Vec<Reference>, GitError>",
      "span": {
        "start": {
          "line": 446,
          "column": 1
        },
        "end": {
          "line": 480,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 472,
        "column": 31
      },
      "end": {
        "line": 472,
        "column": 33
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "fetch",
      "return_type": "-> Result<(), GitError>",
      "span": {
        "start": {
          "line": 191,
          "column": 1
        },
        "end": {
          "line": 219,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 214,
        "column": 19
      },
      "end": {
        "line": 214,
        "column": 21
      }
    },
    "replacement": "!=",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "parse_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 169,
          "column": 1
        },
        "end": {
          "line": 178,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 170,
        "column": 5
      },
      "end": {
        "line": 177,
        "column": 6
      }
    },
    "replacement": "Ok((0, 0, 1))",
    "genre": "FnValue"
  },
  {
    "package": "git_perf_cli_types",
    "file": "cli_types/src/lib.rs",
    "function": {
      "function_name": "parse_key_value",
      "return_type": "-> Result<(String, String)>",
      "span": {
        "start": {
          "line": 250,
          "column": 1
        },
        "end": {
          "line": 257,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 251,
        "column": 5
      },
      "end": {
        "line": 256,
        "column": 21
      }
    },
    "replacement": "Ok((String::new(), String::new()))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "report",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 253,
          "column": 1
        },
        "end": {
          "line": 363,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 355,
        "column": 23
      },
      "end": {
        "line": 355,
        "column": 56
      }
    },
    "replacement": "false",
    "genre": "MatchArmGuard"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "get_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 180,
          "column": 1
        },
        "end": {
          "line": 185,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 181,
        "column": 5
      },
      "end": {
        "line": 184,
        "column": 32
      }
    },
    "replacement": "Ok((-1, -1, 0))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "parse_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 169,
          "column": 1
        },
        "end": {
          "line": 178,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 170,
        "column": 5
      },
      "end": {
        "line": 177,
        "column": 6
      }
    },
    "replacement": "Ok((0, 1, 0))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "parse_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 169,
          "column": 1
        },
        "end": {
          "line": 178,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 170,
        "column": 5
      },
      "end": {
        "line": 177,
        "column": 6
      }
    },
    "replacement": "Ok((1, 0, 0))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "check_git_version",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 194,
          "column": 1
        },
        "end": {
          "line": 204,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 196,
        "column": 22
      },
      "end": {
        "line": 196,
        "column": 23
      }
    },
    "replacement": ">",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "Stats::z_score_with_method",
      "return_type": "-> f64",
      "span": {
        "start": {
          "line": 106,
          "column": 5
        },
        "end": {
          "line": 117,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 107,
        "column": 9
      },
      "end": {
        "line": 116,
        "column": 52
      }
    },
    "replacement": "0.0",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "get_git_perf_remote",
      "return_type": "-> Option<String>",
      "span": {
        "start": {
          "line": 116,
          "column": 1
        },
        "end": {
          "line": 120,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 117,
        "column": 5
      },
      "end": {
        "line": 119,
        "column": 45
      }
    },
    "replacement": "None",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "PlotlyReporter::convert_to_x_y",
      "return_type": "-> (Vec<usize>, Vec<f64>)",
      "span": {
        "start": {
          "line": 55,
          "column": 5
        },
        "end": {
          "line": 60,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 56,
        "column": 9
      },
      "end": {
        "line": 59,
        "column": 21
      }
    },
    "replacement": "(vec![1], vec![-1.0])",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/config.rs",
    "function": {
      "function_name": "<impl ConfigParentFallbackExt for Config>::get_with_parent_fallback",
      "return_type": "-> Option<String>",
      "span": {
        "start": {
          "line": 30,
          "column": 5
        },
        "end": {
          "line": 44,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 32,
        "column": 9
      },
      "end": {
        "line": 43,
        "column": 13
      }
    },
    "replacement": "Some(String::new())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "parse_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 169,
          "column": 1
        },
        "end": {
          "line": 178,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 170,
        "column": 5
      },
      "end": {
        "line": 177,
        "column": 6
      }
    },
    "replacement": "Ok((-1, 1, 0))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "PlotlyReporter::convert_to_x_y",
      "return_type": "-> (Vec<usize>, Vec<f64>)",
      "span": {
        "start": {
          "line": 55,
          "column": 5
        },
        "end": {
          "line": 60,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 56,
        "column": 9
      },
      "end": {
        "line": 59,
        "column": 21
      }
    },
    "replacement": "(vec![], vec![-1.0])",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "<impl Display for Stats>::fmt",
      "return_type": "-> std::fmt::Result",
      "span": {
        "start": {
          "line": 89,
          "column": 5
        },
        "end": {
          "line": 98,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 90,
        "column": 9
      },
      "end": {
        "line": 97,
        "column": 10
      }
    },
    "replacement": "Ok(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "parse_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 169,
          "column": 1
        },
        "end": {
          "line": 178,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 170,
        "column": 5
      },
      "end": {
        "line": 177,
        "column": 6
      }
    },
    "replacement": "Ok((1, -1, 0))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "walk_commits",
      "return_type": "-> Result<Vec<(String, Vec<String>)>>",
      "span": {
        "start": {
          "line": 707,
          "column": 1
        },
        "end": {
          "line": 757,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 752,
        "column": 42
      },
      "end": {
        "line": 752,
        "column": 43
      }
    },
    "replacement": "<=",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "pull_internal",
      "return_type": "-> Result<(), GitError>",
      "span": {
        "start": {
          "line": 764,
          "column": 1
        },
        "end": {
          "line": 775,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 765,
        "column": 5
      },
      "end": {
        "line": 774,
        "column": 11
      }
    },
    "replacement": "Ok(())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "get_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 180,
          "column": 1
        },
        "end": {
          "line": 185,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 181,
        "column": 5
      },
      "end": {
        "line": 184,
        "column": 32
      }
    },
    "replacement": "Ok((-1, 0, 0))",
    "genre": "FnValue"
  },
  {
    "package": "git_perf_cli_types",
    "file": "cli_types/src/lib.rs",
    "function": {
      "function_name": "parse_spaceless_string",
      "return_type": "-> Result<String>",
      "span": {
        "start": {
          "line": 259,
          "column": 1
        },
        "end": {
          "line": 265,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 260,
        "column": 37
      },
      "end": {
        "line": 260,
        "column": 38
      }
    },
    "replacement": ">=",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "compact_head",
      "return_type": "-> Result<(), GitError>",
      "span": {
        "start": {
          "line": 262,
          "column": 1
        },
        "end": {
          "line": 286,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 263,
        "column": 5
      },
      "end": {
        "line": 285,
        "column": 11
      }
    },
    "replacement": "Ok(())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/config.rs",
    "function": {
      "function_name": "backoff_max_elapsed_seconds",
      "return_type": "-> u64",
      "span": {
        "start": {
          "line": 162,
          "column": 1
        },
        "end": {
          "line": 174,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 164,
        "column": 5
      },
      "end": {
        "line": 173,
        "column": 6
      }
    },
    "replacement": "1",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "get_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 180,
          "column": 1
        },
        "end": {
          "line": 185,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 181,
        "column": 5
      },
      "end": {
        "line": 184,
        "column": 32
      }
    },
    "replacement": "Ok((1, -1, 1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "ensure_remote_exists",
      "return_type": "-> Result<(), GitError>",
      "span": {
        "start": {
          "line": 143,
          "column": 1
        },
        "end": {
          "line": 153,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 144,
        "column": 5
      },
      "end": {
        "line": 152,
        "column": 33
      }
    },
    "replacement": "Ok(())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit",
      "return_type": "-> Result<AuditResult>",
      "span": {
        "start": {
          "line": 77,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 120,
        "column": 25
      },
      "end": {
        "line": 120,
        "column": 26
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "walk_commits",
      "return_type": "-> Result<Vec<(String, Vec<String>)>>",
      "span": {
        "start": {
          "line": 707,
          "column": 1
        },
        "end": {
          "line": 757,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 752,
        "column": 25
      },
      "end": {
        "line": 752,
        "column": 27
      }
    },
    "replacement": "||",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "map_git_error",
      "return_type": "-> GitError",
      "span": {
        "start": {
          "line": 96,
          "column": 1
        },
        "end": {
          "line": 114,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 106,
        "column": 55
      },
      "end": {
        "line": 106,
        "column": 96
      }
    },
    "replacement": "false",
    "genre": "MatchArmGuard"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "get_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 180,
          "column": 1
        },
        "end": {
          "line": 185,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 181,
        "column": 5
      },
      "end": {
        "line": 184,
        "column": 32
      }
    },
    "replacement": "Ok((0, -1, 0))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/config.rs",
    "function": {
      "function_name": "audit_min_relative_deviation",
      "return_type": "-> Option<f64>",
      "span": {
        "start": {
          "line": 176,
          "column": 1
        },
        "end": {
          "line": 189,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 178,
        "column": 5
      },
      "end": {
        "line": 188,
        "column": 9
      }
    },
    "replacement": "Some(-1.0)",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "PlotlyReporter::convert_to_x_y",
      "return_type": "-> (Vec<usize>, Vec<f64>)",
      "span": {
        "start": {
          "line": 55,
          "column": 5
        },
        "end": {
          "line": 60,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 56,
        "column": 9
      },
      "end": {
        "line": 59,
        "column": 21
      }
    },
    "replacement": "(vec![0], vec![0.0])",
    "genre": "FnValue"
  },
  {
    "package": "git_perf_cli_types",
    "file": "cli_types/src/lib.rs",
    "function": {
      "function_name": "Cli::command_without_version",
      "return_type": "-> clap::Command",
      "span": {
        "start": {
          "line": 53,
          "column": 5
        },
        "end": {
          "line": 58,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 55,
        "column": 9
      },
      "end": {
        "line": 57,
        "column": 12
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "internal_get_head_revision",
      "return_type": "-> Result<String, GitError>",
      "span": {
        "start": {
          "line": 145,
          "column": 1
        },
        "end": {
          "line": 147,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 146,
        "column": 5
      },
      "end": {
        "line": 146,
        "column": 26
      }
    },
    "replacement": "Ok(String::new())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "set_git_perf_remote",
      "return_type": "-> Result<(), GitError>",
      "span": {
        "start": {
          "line": 122,
          "column": 1
        },
        "end": {
          "line": 124,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 123,
        "column": 5
      },
      "end": {
        "line": 123,
        "column": 75
      }
    },
    "replacement": "Ok(())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/config.rs",
    "function": {
      "function_name": "<impl ConfigParentFallbackExt for Config>::get_with_parent_fallback",
      "return_type": "-> Option<String>",
      "span": {
        "start": {
          "line": 30,
          "column": 5
        },
        "end": {
          "line": 44,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 32,
        "column": 9
      },
      "end": {
        "line": 43,
        "column": 13
      }
    },
    "replacement": "None",
    "genre": "FnValue"
  },
  {
    "package": "git_perf_cli_types",
    "file": "cli_types/src/lib.rs",
    "function": {
      "function_name": "parse_datetime_value_now",
      "return_type": "-> Result<DateTime<Utc>>",
      "span": {
        "start": {
          "line": 267,
          "column": 1
        },
        "end": {
          "line": 269,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 268,
        "column": 5
      },
      "end": {
        "line": 268,
        "column": 45
      }
    },
    "replacement": "Ok(DateTime::new())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "map_git_error",
      "return_type": "-> GitError",
      "span": {
        "start": {
          "line": 96,
          "column": 1
        },
        "end": {
          "line": 114,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 99,
        "column": 5
      },
      "end": {
        "line": 113,
        "column": 6
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit",
      "return_type": "-> Result<AuditResult>",
      "span": {
        "start": {
          "line": 77,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 92,
        "column": 60
      },
      "end": {
        "line": 92,
        "column": 62
      }
    },
    "replacement": "!=",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "<impl VecAggregation for Vec<f64>>::median",
      "return_type": "-> Option<f64>",
      "span": {
        "start": {
          "line": 121,
          "column": 5
        },
        "end": {
          "line": 132,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 126,
        "column": 38
      },
      "end": {
        "line": 126,
        "column": 39
      }
    },
    "replacement": "*",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "get_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 180,
          "column": 1
        },
        "end": {
          "line": 185,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 181,
        "column": 5
      },
      "end": {
        "line": 184,
        "column": 32
      }
    },
    "replacement": "Ok((1, -1, 0))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "new_symbolic_write_ref",
      "return_type": "-> Result<String, GitError>",
      "span": {
        "start": {
          "line": 428,
          "column": 1
        },
        "end": {
          "line": 442,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 429,
        "column": 5
      },
      "end": {
        "line": 441,
        "column": 15
      }
    },
    "replacement": "Ok(\"xyzzy\".into())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "<impl VecAggregation for Vec<f64>>::median",
      "return_type": "-> Option<f64>",
      "span": {
        "start": {
          "line": 121,
          "column": 5
        },
        "end": {
          "line": 132,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 122,
        "column": 9
      },
      "end": {
        "line": 131,
        "column": 10
      }
    },
    "replacement": "None",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "check_git_version",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 194,
          "column": 1
        },
        "end": {
          "line": 204,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 196,
        "column": 22
      },
      "end": {
        "line": 196,
        "column": 23
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit",
      "return_type": "-> Result<AuditResult>",
      "span": {
        "start": {
          "line": 77,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 89,
        "column": 16
      },
      "end": {
        "line": 89,
        "column": 18
      }
    },
    "replacement": "!=",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "git_push_notes_ref",
      "return_type": "-> Result<(), GitError>",
      "span": {
        "start": {
          "line": 544,
          "column": 1
        },
        "end": {
          "line": 584,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 551,
        "column": 5
      },
      "end": {
        "line": 583,
        "column": 11
      }
    },
    "replacement": "Ok(())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "report",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 253,
          "column": 1
        },
        "end": {
          "line": 363,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 269,
        "column": 45
      },
      "end": {
        "line": 269,
        "column": 46
      }
    },
    "replacement": "",
    "genre": "UnaryOperator"
  },
  {
    "package": "git_perf_cli_types",
    "file": "cli_types/src/lib.rs",
    "function": {
      "function_name": "parse_datetime_value",
      "return_type": "-> Result<DateTime<Utc>>",
      "span": {
        "start": {
          "line": 271,
          "column": 1
        },
        "end": {
          "line": 285,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 272,
        "column": 20
      },
      "end": {
        "line": 272,
        "column": 21
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit",
      "return_type": "-> Result<AuditResult>",
      "span": {
        "start": {
          "line": 77,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 122,
        "column": 47
      },
      "end": {
        "line": 122,
        "column": 48
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "git_rev_parse_symbolic_ref",
      "return_type": "-> Option<String>",
      "span": {
        "start": {
          "line": 157,
          "column": 1
        },
        "end": {
          "line": 161,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 158,
        "column": 5
      },
      "end": {
        "line": 160,
        "column": 45
      }
    },
    "replacement": "None",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit",
      "return_type": "-> Result<AuditResult>",
      "span": {
        "start": {
          "line": 77,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 194,
        "column": 8
      },
      "end": {
        "line": 194,
        "column": 9
      }
    },
    "replacement": "",
    "genre": "UnaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/serialization.rs",
    "function": {
      "function_name": "serialize_multiple",
      "return_type": "-> String",
      "span": {
        "start": {
          "line": 34,
          "column": 1
        },
        "end": {
          "line": 39,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 35,
        "column": 5
      },
      "end": {
        "line": 38,
        "column": 18
      }
    },
    "replacement": "String::new()",
    "genre": "FnValue"
  },
  {
    "package": "git_perf_cli_types",
    "file": "cli_types/src/lib.rs",
    "function": {
      "function_name": "parse_spaceless_string",
      "return_type": "-> Result<String>",
      "span": {
        "start": {
          "line": 259,
          "column": 1
        },
        "end": {
          "line": 265,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 260,
        "column": 37
      },
      "end": {
        "line": 260,
        "column": 38
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "git_perf_cli_types",
    "file": "cli_types/src/lib.rs",
    "function": {
      "function_name": "parse_datetime_value",
      "return_type": "-> Result<DateTime<Utc>>",
      "span": {
        "start": {
          "line": 271,
          "column": 1
        },
        "end": {
          "line": 285,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 272,
        "column": 20
      },
      "end": {
        "line": 272,
        "column": 21
      }
    },
    "replacement": ">",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "Stats::z_score",
      "return_type": "-> f64",
      "span": {
        "start": {
          "line": 102,
          "column": 5
        },
        "end": {
          "line": 104,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 103,
        "column": 9
      },
      "end": {
        "line": 103,
        "column": 77
      }
    },
    "replacement": "1.0",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/basic_measure.rs",
    "function": {
      "function_name": "measure",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 7,
          "column": 1
        },
        "end": {
          "line": 35,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 13,
        "column": 5
      },
      "end": {
        "line": 34,
        "column": 11
      }
    },
    "replacement": "Ok(())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "PlotlyReporter::convert_to_x_y",
      "return_type": "-> (Vec<usize>, Vec<f64>)",
      "span": {
        "start": {
          "line": 55,
          "column": 5
        },
        "end": {
          "line": 60,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 56,
        "column": 9
      },
      "end": {
        "line": 59,
        "column": 21
      }
    },
    "replacement": "(vec![1], vec![1.0])",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/measurement_retrieval.rs",
    "function": {
      "function_name": "summarize_measurements",
      "return_type": "-> impl Iterator<Item = Result<CommitSummary>>+'a",
      "span": {
        "start": {
          "line": 13,
          "column": 1
        },
        "end": {
          "line": 35,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 21,
        "column": 5
      },
      "end": {
        "line": 34,
        "column": 7
      }
    },
    "replacement": "::std::iter::once(Ok(Default::default()))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit",
      "return_type": "-> Result<AuditResult>",
      "span": {
        "start": {
          "line": 77,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 178,
        "column": 41
      },
      "end": {
        "line": 178,
        "column": 42
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "is_shallow_repo",
      "return_type": "-> Result<bool, GitError>",
      "span": {
        "start": {
          "line": 163,
          "column": 1
        },
        "end": {
          "line": 167,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 164,
        "column": 5
      },
      "end": {
        "line": 166,
        "column": 42
      }
    },
    "replacement": "Ok(true)",
    "genre": "FnValue"
  },
  {
    "package": "git_perf_cli_types",
    "file": "cli_types/src/lib.rs",
    "function": {
      "function_name": "parse_datetime_value",
      "return_type": "-> Result<DateTime<Utc>>",
      "span": {
        "start": {
          "line": 271,
          "column": 1
        },
        "end": {
          "line": 285,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 272,
        "column": 5
      },
      "end": {
        "line": 284,
        "column": 26
      }
    },
    "replacement": "Ok(DateTime::from(Default::default()))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "<impl VecAggregation for Vec<f64>>::median",
      "return_type": "-> Option<f64>",
      "span": {
        "start": {
          "line": 121,
          "column": 5
        },
        "end": {
          "line": 132,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 126,
        "column": 42
      },
      "end": {
        "line": 126,
        "column": 43
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "map_git_error",
      "return_type": "-> GitError",
      "span": {
        "start": {
          "line": 96,
          "column": 1
        },
        "end": {
          "line": 114,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 109,
        "column": 55
      },
      "end": {
        "line": 109,
        "column": 91
      }
    },
    "replacement": "true",
    "genre": "MatchArmGuard"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "get_git_perf_remote",
      "return_type": "-> Option<String>",
      "span": {
        "start": {
          "line": 116,
          "column": 1
        },
        "end": {
          "line": 120,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 117,
        "column": 5
      },
      "end": {
        "line": 119,
        "column": 45
      }
    },
    "replacement": "Some(String::new())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "create_temp_ref_name",
      "return_type": "-> String",
      "span": {
        "start": {
          "line": 155,
          "column": 1
        },
        "end": {
          "line": 159,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 157,
        "column": 5
      },
      "end": {
        "line": 158,
        "column": 32
      }
    },
    "replacement": "String::new()",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/serialization.rs",
    "function": {
      "function_name": "deserialize",
      "return_type": "-> Vec<MeasurementData>",
      "span": {
        "start": {
          "line": 129,
          "column": 1
        },
        "end": {
          "line": 135,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 132,
        "column": 21
      },
      "end": {
        "line": 132,
        "column": 22
      }
    },
    "replacement": "",
    "genre": "UnaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/serialization.rs",
    "function": {
      "function_name": "deserialize",
      "return_type": "-> Vec<MeasurementData>",
      "span": {
        "start": {
          "line": 129,
          "column": 1
        },
        "end": {
          "line": 135,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 130,
        "column": 5
      },
      "end": {
        "line": 134,
        "column": 23
      }
    },
    "replacement": "vec![]",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit",
      "return_type": "-> Result<AuditResult>",
      "span": {
        "start": {
          "line": 77,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 178,
        "column": 41
      },
      "end": {
        "line": 178,
        "column": 42
      }
    },
    "replacement": "<",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "parse_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 169,
          "column": 1
        },
        "end": {
          "line": 178,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 170,
        "column": 5
      },
      "end": {
        "line": 177,
        "column": 6
      }
    },
    "replacement": "Ok((1, 1, -1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "<impl VecAggregation for Vec<f64>>::median",
      "return_type": "-> Option<f64>",
      "span": {
        "start": {
          "line": 121,
          "column": 5
        },
        "end": {
          "line": 132,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 128,
        "column": 37
      },
      "end": {
        "line": 128,
        "column": 38
      }
    },
    "replacement": "%",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/serialization.rs",
    "function": {
      "function_name": "deserialize_single",
      "return_type": "-> Option<MeasurementData>",
      "span": {
        "start": {
          "line": 41,
          "column": 1
        },
        "end": {
          "line": 127,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 42,
        "column": 5
      },
      "end": {
        "line": 126,
        "column": 7
      }
    },
    "replacement": "None",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "NumericReductionFunc::aggregate_by",
      "return_type": "-> Option<Self::Item>",
      "span": {
        "start": {
          "line": 136,
          "column": 5
        },
        "end": {
          "line": 150,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 137,
        "column": 9
      },
      "end": {
        "line": 149,
        "column": 10
      }
    },
    "replacement": "Some(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "get_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 180,
          "column": 1
        },
        "end": {
          "line": 185,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 181,
        "column": 5
      },
      "end": {
        "line": 184,
        "column": 32
      }
    },
    "replacement": "Ok((0, 0, 0))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "remove_measurements_from_commits",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 293,
          "column": 1
        },
        "end": {
          "line": 310,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 294,
        "column": 5
      },
      "end": {
        "line": 309,
        "column": 11
      }
    },
    "replacement": "Ok(())",
    "genre": "FnValue"
  },
  {
    "package": "git_perf_cli_types",
    "file": "cli_types/src/lib.rs",
    "function": {
      "function_name": "parse_datetime_value_now",
      "return_type": "-> Result<DateTime<Utc>>",
      "span": {
        "start": {
          "line": 267,
          "column": 1
        },
        "end": {
          "line": 269,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 268,
        "column": 5
      },
      "end": {
        "line": 268,
        "column": 45
      }
    },
    "replacement": "Ok(DateTime::from(Default::default()))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "map_git_error_for_backoff",
      "return_type": "-> ::backoff::Error<GitError>",
      "span": {
        "start": {
          "line": 48,
          "column": 1
        },
        "end": {
          "line": 62,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 49,
        "column": 5
      },
      "end": {
        "line": 61,
        "column": 6
      }
    },
    "replacement": "Error::new()",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "concat_version",
      "return_type": "-> String",
      "span": {
        "start": {
          "line": 187,
          "column": 1
        },
        "end": {
          "line": 192,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 188,
        "column": 5
      },
      "end": {
        "line": 191,
        "column": 6
      }
    },
    "replacement": "String::new()",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "map_git_error",
      "return_type": "-> GitError",
      "span": {
        "start": {
          "line": 96,
          "column": 1
        },
        "end": {
          "line": 114,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 106,
        "column": 55
      },
      "end": {
        "line": 106,
        "column": 96
      }
    },
    "replacement": "true",
    "genre": "MatchArmGuard"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/cli.rs",
    "function": {
      "function_name": "handle_calls",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 17,
          "column": 1
        },
        "end": {
          "line": 90,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 18,
        "column": 5
      },
      "end": {
        "line": 89,
        "column": 6
      }
    },
    "replacement": "Ok(())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "get_direction_arrow",
      "return_type": "-> &'static str",
      "span": {
        "start": {
          "line": 25,
          "column": 1
        },
        "end": {
          "line": 33,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 28,
        "column": 5
      },
      "end": {
        "line": 32,
        "column": 6
      }
    },
    "replacement": "\"xyzzy\"",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/measurement_retrieval.rs",
    "function": {
      "function_name": "<impl MeasurementReducer<'a> for T>::reduce_by",
      "return_type": "-> Option<MeasurementSummary>",
      "span": {
        "start": {
          "line": 60,
          "column": 5
        },
        "end": {
          "line": 74,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 61,
        "column": 9
      },
      "end": {
        "line": 73,
        "column": 11
      }
    },
    "replacement": "None",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "get_repository_root",
      "return_type": "-> Result<String, String>",
      "span": {
        "start": {
          "line": 39,
          "column": 1
        },
        "end": {
          "line": 44,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 41,
        "column": 5
      },
      "end": {
        "line": 43,
        "column": 41
      }
    },
    "replacement": "Ok(\"xyzzy\".into())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/measurement_retrieval.rs",
    "function": {
      "function_name": "walk_commits",
      "return_type": "-> Result<impl Iterator<Item = Result<Commit>>>",
      "span": {
        "start": {
          "line": 85,
          "column": 1
        },
        "end": {
          "line": 98,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 86,
        "column": 5
      },
      "end": {
        "line": 96,
        "column": 12
      }
    },
    "replacement": "Ok(::std::iter::empty())",
    "genre": "FnValue"
  },
  {
    "package": "git_perf_cli_types",
    "file": "cli_types/src/lib.rs",
    "function": {
      "function_name": "parse_key_value",
      "return_type": "-> Result<(String, String)>",
      "span": {
        "start": {
          "line": 250,
          "column": 1
        },
        "end": {
          "line": 257,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 255,
        "column": 47
      },
      "end": {
        "line": 255,
        "column": 48
      }
    },
    "replacement": "*",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/serialization.rs",
    "function": {
      "function_name": "serialize_single",
      "return_type": "-> String",
      "span": {
        "start": {
          "line": 16,
          "column": 1
        },
        "end": {
          "line": 32,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 31,
        "column": 30
      },
      "end": {
        "line": 31,
        "column": 31
      }
    },
    "replacement": "-",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "parse_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 169,
          "column": 1
        },
        "end": {
          "line": 178,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 170,
        "column": 5
      },
      "end": {
        "line": 177,
        "column": 6
      }
    },
    "replacement": "Ok((1, 1, 0))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "create_temp_rewrite_head",
      "return_type": "-> Result<String, GitError>",
      "span": {
        "start": {
          "line": 254,
          "column": 1
        },
        "end": {
          "line": 256,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 255,
        "column": 5
      },
      "end": {
        "line": 255,
        "column": 74
      }
    },
    "replacement": "Ok(String::new())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "report",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 253,
          "column": 1
        },
        "end": {
          "line": 363,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 304,
        "column": 50
      },
      "end": {
        "line": 304,
        "column": 52
      }
    },
    "replacement": "!=",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "report",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 253,
          "column": 1
        },
        "end": {
          "line": 363,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 355,
        "column": 32
      },
      "end": {
        "line": 355,
        "column": 34
      }
    },
    "replacement": "!=",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "map_git_error",
      "return_type": "-> GitError",
      "span": {
        "start": {
          "line": 96,
          "column": 1
        },
        "end": {
          "line": 114,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 100,
        "column": 55
      },
      "end": {
        "line": 100,
        "column": 96
      }
    },
    "replacement": "true",
    "genre": "MatchArmGuard"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "parse_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 169,
          "column": 1
        },
        "end": {
          "line": 178,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 170,
        "column": 5
      },
      "end": {
        "line": 177,
        "column": 6
      }
    },
    "replacement": "Ok((1, 1, 1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "PlotlyReporter::convert_to_x_y",
      "return_type": "-> (Vec<usize>, Vec<f64>)",
      "span": {
        "start": {
          "line": 55,
          "column": 5
        },
        "end": {
          "line": 60,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 58,
        "column": 42
      },
      "end": {
        "line": 58,
        "column": 43
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "PlotlyReporter::convert_to_x_y",
      "return_type": "-> (Vec<usize>, Vec<f64>)",
      "span": {
        "start": {
          "line": 55,
          "column": 5
        },
        "end": {
          "line": 60,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 56,
        "column": 9
      },
      "end": {
        "line": 59,
        "column": 21
      }
    },
    "replacement": "(vec![], vec![0.0])",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "walk_commits",
      "return_type": "-> Result<Vec<(String, Vec<String>)>>",
      "span": {
        "start": {
          "line": 707,
          "column": 1
        },
        "end": {
          "line": 757,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 709,
        "column": 5
      },
      "end": {
        "line": 756,
        "column": 16
      }
    },
    "replacement": "Ok(vec![(String::new(), vec![\"xyzzy\".into()])])",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "check_git_version",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 194,
          "column": 1
        },
        "end": {
          "line": 204,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 196,
        "column": 22
      },
      "end": {
        "line": 196,
        "column": 23
      }
    },
    "replacement": "<=",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/serialization.rs",
    "function": {
      "function_name": "deserialize_single",
      "return_type": "-> Option<MeasurementData>",
      "span": {
        "start": {
          "line": 41,
          "column": 1
        },
        "end": {
          "line": 127,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 48,
        "column": 23
      },
      "end": {
        "line": 48,
        "column": 24
      }
    },
    "replacement": ">",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "ReporterFactory::from_file_name",
      "return_type": "-> Option<Box<dyn Reporter<'_>+'_>>",
      "span": {
        "start": {
          "line": 236,
          "column": 5
        },
        "end": {
          "line": 250,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 245,
        "column": 17
      },
      "end": {
        "line": 245,
        "column": 86
      }
    },
    "replacement": "",
    "genre": "MatchArm"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "parse_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 169,
          "column": 1
        },
        "end": {
          "line": 178,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 170,
        "column": 5
      },
      "end": {
        "line": 177,
        "column": 6
      }
    },
    "replacement": "Ok((0, 0, 0))",
    "genre": "FnValue"
  },
  {
    "package": "git_perf_cli_types",
    "file": "cli_types/src/lib.rs",
    "function": {
      "function_name": "parse_datetime_value",
      "return_type": "-> Result<DateTime<Utc>>",
      "span": {
        "start": {
          "line": 271,
          "column": 1
        },
        "end": {
          "line": 285,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 284,
        "column": 13
      },
      "end": {
        "line": 284,
        "column": 14
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "format_z_score_display",
      "return_type": "-> String",
      "span": {
        "start": {
          "line": 14,
          "column": 1
        },
        "end": {
          "line": 23,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 18,
        "column": 5
      },
      "end": {
        "line": 22,
        "column": 6
      }
    },
    "replacement": "String::new()",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/cli.rs",
    "function": {
      "function_name": "handle_calls",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 17,
          "column": 1
        },
        "end": {
          "line": 90,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 20,
        "column": 9
      },
      "end": {
        "line": 20,
        "column": 26
      }
    },
    "replacement": "",
    "genre": "MatchArm"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "NumericReductionFunc::aggregate_by",
      "return_type": "-> Option<Self::Item>",
      "span": {
        "start": {
          "line": 136,
          "column": 5
        },
        "end": {
          "line": 150,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 137,
        "column": 9
      },
      "end": {
        "line": 149,
        "column": 10
      }
    },
    "replacement": "None",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/cli.rs",
    "function": {
      "function_name": "handle_calls",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 17,
          "column": 1
        },
        "end": {
          "line": 90,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 22,
        "column": 9
      },
      "end": {
        "line": 22,
        "column": 27
      }
    },
    "replacement": "",
    "genre": "MatchArm"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/config.rs",
    "function": {
      "function_name": "read_hierarchical_config",
      "return_type": "-> Result<Config, ConfigError>",
      "span": {
        "start": {
          "line": 74,
          "column": 1
        },
        "end": {
          "line": 107,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 76,
        "column": 5
      },
      "end": {
        "line": 106,
        "column": 20
      }
    },
    "replacement": "Ok(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "map_git_error_for_backoff",
      "return_type": "-> ::backoff::Error<GitError>",
      "span": {
        "start": {
          "line": 48,
          "column": 1
        },
        "end": {
          "line": 62,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 49,
        "column": 5
      },
      "end": {
        "line": 61,
        "column": 6
      }
    },
    "replacement": "Error::from_iter([Default::default()])",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "create_temp_ref_name",
      "return_type": "-> String",
      "span": {
        "start": {
          "line": 155,
          "column": 1
        },
        "end": {
          "line": 159,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 157,
        "column": 5
      },
      "end": {
        "line": 158,
        "column": 32
      }
    },
    "replacement": "\"xyzzy\".into()",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/config.rs",
    "function": {
      "function_name": "find_config_path",
      "return_type": "-> Option<PathBuf>",
      "span": {
        "start": {
          "line": 109,
          "column": 1
        },
        "end": {
          "line": 117,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 111,
        "column": 5
      },
      "end": {
        "line": 116,
        "column": 6
      }
    },
    "replacement": "None",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "report",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 253,
          "column": 1
        },
        "end": {
          "line": 363,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 353,
        "column": 15
      },
      "end": {
        "line": 353,
        "column": 17
      }
    },
    "replacement": "!=",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/serialization.rs",
    "function": {
      "function_name": "serialize_multiple",
      "return_type": "-> String",
      "span": {
        "start": {
          "line": 34,
          "column": 1
        },
        "end": {
          "line": 39,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 35,
        "column": 5
      },
      "end": {
        "line": 38,
        "column": 18
      }
    },
    "replacement": "\"xyzzy\".into()",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit",
      "return_type": "-> Result<AuditResult>",
      "span": {
        "start": {
          "line": 77,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 184,
        "column": 47
      },
      "end": {
        "line": 184,
        "column": 49
      }
    },
    "replacement": "||",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "parse_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 169,
          "column": 1
        },
        "end": {
          "line": 178,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 170,
        "column": 5
      },
      "end": {
        "line": 177,
        "column": 6
      }
    },
    "replacement": "Ok((1, -1, -1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "get_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 180,
          "column": 1
        },
        "end": {
          "line": 185,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 181,
        "column": 5
      },
      "end": {
        "line": 184,
        "column": 32
      }
    },
    "replacement": "Ok((1, 1, 0))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "<impl Reporter<'a> for CsvReporter<'a>>::as_bytes",
      "return_type": "-> Vec<u8>",
      "span": {
        "start": {
          "line": 178,
          "column": 5
        },
        "end": {
          "line": 213,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 179,
        "column": 9
      },
      "end": {
        "line": 212,
        "column": 36
      }
    },
    "replacement": "vec![1]",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "parse_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 169,
          "column": 1
        },
        "end": {
          "line": 178,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 170,
        "column": 5
      },
      "end": {
        "line": 177,
        "column": 6
      }
    },
    "replacement": "Ok((-1, -1, -1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "get_head_revision",
      "return_type": "-> Result<String>",
      "span": {
        "start": {
          "line": 141,
          "column": 1
        },
        "end": {
          "line": 143,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 142,
        "column": 5
      },
      "end": {
        "line": 142,
        "column": 38
      }
    },
    "replacement": "Ok(\"xyzzy\".into())",
    "genre": "FnValue"
  },
  {
    "package": "git_perf_cli_types",
    "file": "cli_types/src/lib.rs",
    "function": {
      "function_name": "parse_spaceless_string",
      "return_type": "-> Result<String>",
      "span": {
        "start": {
          "line": 259,
          "column": 1
        },
        "end": {
          "line": 265,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 260,
        "column": 5
      },
      "end": {
        "line": 264,
        "column": 6
      }
    },
    "replacement": "Ok(\"xyzzy\".into())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "parse_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 169,
          "column": 1
        },
        "end": {
          "line": 178,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 170,
        "column": 5
      },
      "end": {
        "line": 177,
        "column": 6
      }
    },
    "replacement": "Ok((0, 0, -1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "get_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 180,
          "column": 1
        },
        "end": {
          "line": 185,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 181,
        "column": 5
      },
      "end": {
        "line": 184,
        "column": 32
      }
    },
    "replacement": "Ok((0, 0, 1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "pull",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 759,
          "column": 1
        },
        "end": {
          "line": 762,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 760,
        "column": 5
      },
      "end": {
        "line": 761,
        "column": 11
      }
    },
    "replacement": "Ok(())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "<impl VecAggregation for Vec<f64>>::median",
      "return_type": "-> Option<f64>",
      "span": {
        "start": {
          "line": 121,
          "column": 5
        },
        "end": {
          "line": 132,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 125,
        "column": 26
      },
      "end": {
        "line": 125,
        "column": 27
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "<impl VecAggregation for Vec<f64>>::median",
      "return_type": "-> Option<f64>",
      "span": {
        "start": {
          "line": 121,
          "column": 5
        },
        "end": {
          "line": 132,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 126,
        "column": 42
      },
      "end": {
        "line": 126,
        "column": 43
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "parse_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 169,
          "column": 1
        },
        "end": {
          "line": 178,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 170,
        "column": 5
      },
      "end": {
        "line": 177,
        "column": 6
      }
    },
    "replacement": "Ok((0, 1, -1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "fetch",
      "return_type": "-> Result<(), GitError>",
      "span": {
        "start": {
          "line": 191,
          "column": 1
        },
        "end": {
          "line": 219,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 192,
        "column": 5
      },
      "end": {
        "line": 218,
        "column": 11
      }
    },
    "replacement": "Ok(())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "concat_version",
      "return_type": "-> String",
      "span": {
        "start": {
          "line": 187,
          "column": 1
        },
        "end": {
          "line": 192,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 188,
        "column": 5
      },
      "end": {
        "line": 191,
        "column": 6
      }
    },
    "replacement": "\"xyzzy\".into()",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/cli.rs",
    "function": {
      "function_name": "handle_calls",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 17,
          "column": 1
        },
        "end": {
          "line": 90,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 69,
        "column": 41
      },
      "end": {
        "line": 69,
        "column": 42
      }
    },
    "replacement": "<=",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "<impl Reporter<'a> for CsvReporter<'a>>::as_bytes",
      "return_type": "-> Vec<u8>",
      "span": {
        "start": {
          "line": 178,
          "column": 5
        },
        "end": {
          "line": 213,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 179,
        "column": 9
      },
      "end": {
        "line": 212,
        "column": 36
      }
    },
    "replacement": "vec![]",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "map_git_error",
      "return_type": "-> GitError",
      "span": {
        "start": {
          "line": 96,
          "column": 1
        },
        "end": {
          "line": 114,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 103,
        "column": 55
      },
      "end": {
        "line": 103,
        "column": 93
      }
    },
    "replacement": "true",
    "genre": "MatchArmGuard"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "<impl Reporter<'a> for CsvReporter<'a>>::add_summarized_trace",
      "return_type": "",
      "span": {
        "start": {
          "line": 215,
          "column": 5
        },
        "end": {
          "line": 230,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 222,
        "column": 9
      },
      "end": {
        "line": 229,
        "column": 10
      }
    },
    "replacement": "()",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "parse_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 169,
          "column": 1
        },
        "end": {
          "line": 178,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 175,
        "column": 9
      },
      "end": {
        "line": 175,
        "column": 87
      }
    },
    "replacement": "",
    "genre": "MatchArm"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit",
      "return_type": "-> Result<AuditResult>",
      "span": {
        "start": {
          "line": 77,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 120,
        "column": 25
      },
      "end": {
        "line": 120,
        "column": 26
      }
    },
    "replacement": "<=",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "calculate_mad",
      "return_type": "-> f64",
      "span": {
        "start": {
          "line": 64,
          "column": 1
        },
        "end": {
          "line": 78,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 65,
        "column": 5
      },
      "end": {
        "line": 77,
        "column": 37
      }
    },
    "replacement": "-1.0",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "prune",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 587,
          "column": 1
        },
        "end": {
          "line": 602,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 588,
        "column": 5
      },
      "end": {
        "line": 601,
        "column": 11
      }
    },
    "replacement": "Ok(())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "map_git_error_for_backoff",
      "return_type": "-> ::backoff::Error<GitError>",
      "span": {
        "start": {
          "line": 48,
          "column": 1
        },
        "end": {
          "line": 62,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 49,
        "column": 5
      },
      "end": {
        "line": 61,
        "column": 6
      }
    },
    "replacement": "Error::from(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "get_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 180,
          "column": 1
        },
        "end": {
          "line": 185,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 181,
        "column": 5
      },
      "end": {
        "line": 184,
        "column": 32
      }
    },
    "replacement": "Ok((1, 0, 0))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "<impl From<git_perf_cli_types::DispersionMethod> for DispersionMethod>::from",
      "return_type": "-> Self",
      "span": {
        "start": {
          "line": 35,
          "column": 5
        },
        "end": {
          "line": 44,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 36,
        "column": 9
      },
      "end": {
        "line": 43,
        "column": 10
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "<impl Reporter<'a> for PlotlyReporter>::add_commits",
      "return_type": "",
      "span": {
        "start": {
          "line": 64,
          "column": 5
        },
        "end": {
          "line": 86,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 65,
        "column": 9
      },
      "end": {
        "line": 85,
        "column": 38
      }
    },
    "replacement": "()",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "parse_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 169,
          "column": 1
        },
        "end": {
          "line": 178,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 170,
        "column": 5
      },
      "end": {
        "line": 177,
        "column": 6
      }
    },
    "replacement": "Ok((-1, -1, 0))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "get_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 180,
          "column": 1
        },
        "end": {
          "line": 185,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 181,
        "column": 5
      },
      "end": {
        "line": 184,
        "column": 32
      }
    },
    "replacement": "Ok((1, 1, 1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "consolidate_write_branches_into",
      "return_type": "-> Result<Vec<Reference>, GitError>",
      "span": {
        "start": {
          "line": 446,
          "column": 1
        },
        "end": {
          "line": 480,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 453,
        "column": 5
      },
      "end": {
        "line": 479,
        "column": 13
      }
    },
    "replacement": "Ok(vec![])",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "Stats::z_score_with_method",
      "return_type": "-> f64",
      "span": {
        "start": {
          "line": 106,
          "column": 5
        },
        "end": {
          "line": 117,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 116,
        "column": 40
      },
      "end": {
        "line": 116,
        "column": 41
      }
    },
    "replacement": "%",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "git_update_ref",
      "return_type": "-> Result<(), GitError>",
      "span": {
        "start": {
          "line": 126,
          "column": 1
        },
        "end": {
          "line": 139,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 127,
        "column": 5
      },
      "end": {
        "line": 138,
        "column": 17
      }
    },
    "replacement": "Ok(())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "walk_commits",
      "return_type": "-> Result<Vec<(String, Vec<String>)>>",
      "span": {
        "start": {
          "line": 707,
          "column": 1
        },
        "end": {
          "line": 757,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 709,
        "column": 5
      },
      "end": {
        "line": 756,
        "column": 16
      }
    },
    "replacement": "Ok(vec![(String::new(), vec![])])",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit",
      "return_type": "-> Result<AuditResult>",
      "span": {
        "start": {
          "line": 77,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 86,
        "column": 5
      },
      "end": {
        "line": 206,
        "column": 7
      }
    },
    "replacement": "Ok(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "spawn_git_command",
      "return_type": "-> Result<Child, io::Error>",
      "span": {
        "start": {
          "line": 18,
          "column": 1
        },
        "end": {
          "line": 46,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 23,
        "column": 5
      },
      "end": {
        "line": 45,
        "column": 17
      }
    },
    "replacement": "Ok(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "get_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 180,
          "column": 1
        },
        "end": {
          "line": 185,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 181,
        "column": 5
      },
      "end": {
        "line": 184,
        "column": 32
      }
    },
    "replacement": "Ok((-1, -1, 1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "remove_measurements_from_reference",
      "return_type": "-> Result<(), GitError>",
      "span": {
        "start": {
          "line": 347,
          "column": 1
        },
        "end": {
          "line": 426,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 351,
        "column": 5
      },
      "end": {
        "line": 425,
        "column": 11
      }
    },
    "replacement": "Ok(())",
    "genre": "FnValue"
  },
  {
    "package": "git_perf_cli_types",
    "file": "cli_types/src/lib.rs",
    "function": {
      "function_name": "<impl FromStr for DispersionMethod>::from_str",
      "return_type": "-> Result<Self, Self::Err>",
      "span": {
        "start": {
          "line": 28,
          "column": 5
        },
        "end": {
          "line": 37,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 31,
        "column": 13
      },
      "end": {
        "line": 31,
        "column": 68
      }
    },
    "replacement": "",
    "genre": "MatchArm"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit",
      "return_type": "-> Result<AuditResult>",
      "span": {
        "start": {
          "line": 77,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 150,
        "column": 55
      },
      "end": {
        "line": 150,
        "column": 56
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "git_perf_cli_types",
    "file": "cli_types/src/lib.rs",
    "function": {
      "function_name": "parse_datetime_value",
      "return_type": "-> Result<DateTime<Utc>>",
      "span": {
        "start": {
          "line": 271,
          "column": 1
        },
        "end": {
          "line": 285,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 276,
        "column": 50
      },
      "end": {
        "line": 276,
        "column": 51
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "get_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 180,
          "column": 1
        },
        "end": {
          "line": 185,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 181,
        "column": 5
      },
      "end": {
        "line": 184,
        "column": 32
      }
    },
    "replacement": "Ok((-1, 0, 1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "parse_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 169,
          "column": 1
        },
        "end": {
          "line": 178,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 170,
        "column": 5
      },
      "end": {
        "line": 177,
        "column": 6
      }
    },
    "replacement": "Ok((1, -1, 1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "get_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 180,
          "column": 1
        },
        "end": {
          "line": 185,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 181,
        "column": 5
      },
      "end": {
        "line": 184,
        "column": 32
      }
    },
    "replacement": "Ok((0, -1, 1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "git_rev_parse",
      "return_type": "-> Result<String, GitError>",
      "span": {
        "start": {
          "line": 149,
          "column": 1
        },
        "end": {
          "line": 155,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 150,
        "column": 5
      },
      "end": {
        "line": 154,
        "column": 45
      }
    },
    "replacement": "Ok(String::new())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/cli.rs",
    "function": {
      "function_name": "handle_calls",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 17,
          "column": 1
        },
        "end": {
          "line": 90,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 69,
        "column": 41
      },
      "end": {
        "line": 69,
        "column": 42
      }
    },
    "replacement": "==",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit",
      "return_type": "-> Result<AuditResult>",
      "span": {
        "start": {
          "line": 77,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 122,
        "column": 47
      },
      "end": {
        "line": 122,
        "column": 48
      }
    },
    "replacement": "<",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "calculate_mad",
      "return_type": "-> f64",
      "span": {
        "start": {
          "line": 64,
          "column": 1
        },
        "end": {
          "line": 78,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 65,
        "column": 5
      },
      "end": {
        "line": 77,
        "column": 37
      }
    },
    "replacement": "0.0",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "<impl VecAggregation for Vec<f64>>::median",
      "return_type": "-> Option<f64>",
      "span": {
        "start": {
          "line": 121,
          "column": 5
        },
        "end": {
          "line": 132,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 130,
        "column": 34
      },
      "end": {
        "line": 130,
        "column": 35
      }
    },
    "replacement": "*",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit",
      "return_type": "-> Result<AuditResult>",
      "span": {
        "start": {
          "line": 77,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 150,
        "column": 68
      },
      "end": {
        "line": 150,
        "column": 69
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "<impl VecAggregation for Vec<f64>>::median",
      "return_type": "-> Option<f64>",
      "span": {
        "start": {
          "line": 121,
          "column": 5
        },
        "end": {
          "line": 132,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 127,
        "column": 39
      },
      "end": {
        "line": 127,
        "column": 40
      }
    },
    "replacement": "%",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "<impl Reporter<'a> for CsvReporter<'a>>::as_bytes",
      "return_type": "-> Vec<u8>",
      "span": {
        "start": {
          "line": 178,
          "column": 5
        },
        "end": {
          "line": 213,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 179,
        "column": 9
      },
      "end": {
        "line": 212,
        "column": 36
      }
    },
    "replacement": "vec![0]",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/measurement_retrieval.rs",
    "function": {
      "function_name": "take_while_same_epoch",
      "return_type": "-> impl Iterator<Item = Result<CommitSummary>>",
      "span": {
        "start": {
          "line": 37,
          "column": 1
        },
        "end": {
          "line": 54,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 44,
        "column": 9
      },
      "end": {
        "line": 51,
        "column": 10
      }
    },
    "replacement": "",
    "genre": "MatchArm"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit",
      "return_type": "-> Result<AuditResult>",
      "span": {
        "start": {
          "line": 77,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 181,
        "column": 18
      },
      "end": {
        "line": 181,
        "column": 19
      }
    },
    "replacement": "",
    "genre": "UnaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/config.rs",
    "function": {
      "function_name": "audit_min_relative_deviation",
      "return_type": "-> Option<f64>",
      "span": {
        "start": {
          "line": 176,
          "column": 1
        },
        "end": {
          "line": 189,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 178,
        "column": 5
      },
      "end": {
        "line": 188,
        "column": 9
      }
    },
    "replacement": "None",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "PlotlyReporter::convert_to_x_y",
      "return_type": "-> (Vec<usize>, Vec<f64>)",
      "span": {
        "start": {
          "line": 55,
          "column": 5
        },
        "end": {
          "line": 60,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 56,
        "column": 9
      },
      "end": {
        "line": 59,
        "column": 21
      }
    },
    "replacement": "(vec![0], vec![])",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/config.rs",
    "function": {
      "function_name": "audit_min_relative_deviation",
      "return_type": "-> Option<f64>",
      "span": {
        "start": {
          "line": 176,
          "column": 1
        },
        "end": {
          "line": 189,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 178,
        "column": 5
      },
      "end": {
        "line": 188,
        "column": 9
      }
    },
    "replacement": "Some(0.0)",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "<impl Reporter<'a> for CsvReporter<'a>>::add_trace",
      "return_type": "",
      "span": {
        "start": {
          "line": 168,
          "column": 5
        },
        "end": {
          "line": 176,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 174,
        "column": 9
      },
      "end": {
        "line": 175,
        "column": 65
      }
    },
    "replacement": "()",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "calculate_mad",
      "return_type": "-> f64",
      "span": {
        "start": {
          "line": 64,
          "column": 1
        },
        "end": {
          "line": 78,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 74,
        "column": 72
      },
      "end": {
        "line": 74,
        "column": 73
      }
    },
    "replacement": "+",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "map_git_error",
      "return_type": "-> GitError",
      "span": {
        "start": {
          "line": 96,
          "column": 1
        },
        "end": {
          "line": 114,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 109,
        "column": 55
      },
      "end": {
        "line": 109,
        "column": 91
      }
    },
    "replacement": "false",
    "genre": "MatchArmGuard"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/serialization.rs",
    "function": {
      "function_name": "deserialize_single",
      "return_type": "-> Option<MeasurementData>",
      "span": {
        "start": {
          "line": 41,
          "column": 1
        },
        "end": {
          "line": 127,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 44,
        "column": 24
      },
      "end": {
        "line": 44,
        "column": 25
      }
    },
    "replacement": "",
    "genre": "UnaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "raw_push",
      "return_type": "-> Result<(), GitError>",
      "span": {
        "start": {
          "line": 495,
          "column": 1
        },
        "end": {
          "line": 542,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 520,
        "column": 48
      },
      "end": {
        "line": 520,
        "column": 50
      }
    },
    "replacement": "!=",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "reconcile_branch_with",
      "return_type": "-> Result<(), GitError>",
      "span": {
        "start": {
          "line": 221,
          "column": 1
        },
        "end": {
          "line": 235,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 222,
        "column": 5
      },
      "end": {
        "line": 234,
        "column": 11
      }
    },
    "replacement": "Ok(())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "create_temp_add_head",
      "return_type": "-> Result<String, GitError>",
      "span": {
        "start": {
          "line": 258,
          "column": 1
        },
        "end": {
          "line": 260,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 259,
        "column": 5
      },
      "end": {
        "line": 259,
        "column": 70
      }
    },
    "replacement": "Ok(String::new())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit",
      "return_type": "-> Result<AuditResult>",
      "span": {
        "start": {
          "line": 77,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 146,
        "column": 9
      },
      "end": {
        "line": 146,
        "column": 10
      }
    },
    "replacement": "*",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "PlotlyReporter::convert_to_x_y",
      "return_type": "-> (Vec<usize>, Vec<f64>)",
      "span": {
        "start": {
          "line": 55,
          "column": 5
        },
        "end": {
          "line": 60,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 56,
        "column": 9
      },
      "end": {
        "line": 59,
        "column": 21
      }
    },
    "replacement": "(vec![1], vec![0.0])",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "consolidate_write_branches_into",
      "return_type": "-> Result<Vec<Reference>, GitError>",
      "span": {
        "start": {
          "line": 446,
          "column": 1
        },
        "end": {
          "line": 480,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 453,
        "column": 5
      },
      "end": {
        "line": 479,
        "column": 13
      }
    },
    "replacement": "Ok(vec![Default::default()])",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/serialization.rs",
    "function": {
      "function_name": "serialize_single",
      "return_type": "-> String",
      "span": {
        "start": {
          "line": 16,
          "column": 1
        },
        "end": {
          "line": 32,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 20,
        "column": 5
      },
      "end": {
        "line": 31,
        "column": 36
      }
    },
    "replacement": "\"xyzzy\".into()",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/config.rs",
    "function": {
      "function_name": "<impl ConfigParentFallbackExt for Config>::get_with_parent_fallback",
      "return_type": "-> Option<String>",
      "span": {
        "start": {
          "line": 30,
          "column": 5
        },
        "end": {
          "line": 44,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 32,
        "column": 9
      },
      "end": {
        "line": 43,
        "column": 13
      }
    },
    "replacement": "Some(\"xyzzy\".into())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit_multiple",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 41,
          "column": 1
        },
        "end": {
          "line": 75,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 65,
        "column": 12
      },
      "end": {
        "line": 65,
        "column": 13
      }
    },
    "replacement": "",
    "genre": "UnaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "default_backoff",
      "return_type": "-> ExponentialBackoff",
      "span": {
        "start": {
          "line": 64,
          "column": 1
        },
        "end": {
          "line": 70,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 66,
        "column": 5
      },
      "end": {
        "line": 69,
        "column": 17
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "report",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 253,
          "column": 1
        },
        "end": {
          "line": 363,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 355,
        "column": 23
      },
      "end": {
        "line": 355,
        "column": 56
      }
    },
    "replacement": "true",
    "genre": "MatchArmGuard"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "get_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 180,
          "column": 1
        },
        "end": {
          "line": 185,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 181,
        "column": 5
      },
      "end": {
        "line": 184,
        "column": 32
      }
    },
    "replacement": "Ok((1, -1, -1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "walk_commits",
      "return_type": "-> Result<Vec<(String, Vec<String>)>>",
      "span": {
        "start": {
          "line": 707,
          "column": 1
        },
        "end": {
          "line": 757,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 739,
        "column": 30
      },
      "end": {
        "line": 739,
        "column": 32
      }
    },
    "replacement": "^=",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "remove_reference",
      "return_type": "-> Result<(), GitError>",
      "span": {
        "start": {
          "line": 482,
          "column": 1
        },
        "end": {
          "line": 493,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 483,
        "column": 5
      },
      "end": {
        "line": 492,
        "column": 7
      }
    },
    "replacement": "Ok(())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit",
      "return_type": "-> Result<AuditResult>",
      "span": {
        "start": {
          "line": 77,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 120,
        "column": 25
      },
      "end": {
        "line": 120,
        "column": 26
      }
    },
    "replacement": ">",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "map_git_error_for_backoff",
      "return_type": "-> ::backoff::Error<GitError>",
      "span": {
        "start": {
          "line": 48,
          "column": 1
        },
        "end": {
          "line": 62,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 49,
        "column": 5
      },
      "end": {
        "line": 61,
        "column": 6
      }
    },
    "replacement": "Error::new(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "git_perf_cli_types",
    "file": "cli_types/src/lib.rs",
    "function": {
      "function_name": "parse_datetime_value_now",
      "return_type": "-> Result<DateTime<Utc>>",
      "span": {
        "start": {
          "line": 267,
          "column": 1
        },
        "end": {
          "line": 269,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 268,
        "column": 5
      },
      "end": {
        "line": 268,
        "column": 45
      }
    },
    "replacement": "Ok(DateTime::new(Default::default()))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/main.rs",
    "function": {
      "function_name": "main",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 4,
          "column": 1
        },
        "end": {
          "line": 6,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 5,
        "column": 5
      },
      "end": {
        "line": 5,
        "column": 24
      }
    },
    "replacement": "Ok(())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "ensure_symbolic_write_ref_exists",
      "return_type": "-> Result<(), GitError>",
      "span": {
        "start": {
          "line": 161,
          "column": 1
        },
        "end": {
          "line": 184,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 162,
        "column": 5
      },
      "end": {
        "line": 183,
        "column": 11
      }
    },
    "replacement": "Ok(())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/basic_measure.rs",
    "function": {
      "function_name": "measure",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 7,
          "column": 1
        },
        "end": {
          "line": 35,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 20,
        "column": 12
      },
      "end": {
        "line": 20,
        "column": 13
      }
    },
    "replacement": "",
    "genre": "UnaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit",
      "return_type": "-> Result<AuditResult>",
      "span": {
        "start": {
          "line": 77,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 140,
        "column": 9
      },
      "end": {
        "line": 140,
        "column": 10
      }
    },
    "replacement": "*",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "PlotlyReporter::convert_to_x_y",
      "return_type": "-> (Vec<usize>, Vec<f64>)",
      "span": {
        "start": {
          "line": 55,
          "column": 5
        },
        "end": {
          "line": 60,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 58,
        "column": 42
      },
      "end": {
        "line": 58,
        "column": 43
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "report",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 253,
          "column": 1
        },
        "end": {
          "line": 363,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 269,
        "column": 12
      },
      "end": {
        "line": 269,
        "column": 13
      }
    },
    "replacement": "",
    "genre": "UnaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "<impl Reporter<'a> for CsvReporter<'a>>::add_commits",
      "return_type": "",
      "span": {
        "start": {
          "line": 164,
          "column": 5
        },
        "end": {
          "line": 166,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 165,
        "column": 9
      },
      "end": {
        "line": 165,
        "column": 76
      }
    },
    "replacement": "()",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/cli.rs",
    "function": {
      "function_name": "determine_dispersion_method",
      "return_type": "-> crate::stats::DispersionMethod",
      "span": {
        "start": {
          "line": 92,
          "column": 1
        },
        "end": {
          "line": 113,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 100,
        "column": 5
      },
      "end": {
        "line": 112,
        "column": 6
      }
    },
    "replacement": "Default::default()",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/measurement_retrieval.rs",
    "function": {
      "function_name": "walk_commits",
      "return_type": "-> Result<impl Iterator<Item = Result<Commit>>>",
      "span": {
        "start": {
          "line": 85,
          "column": 1
        },
        "end": {
          "line": 98,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 86,
        "column": 5
      },
      "end": {
        "line": 96,
        "column": 12
      }
    },
    "replacement": "Ok(::std::iter::once(Ok(Default::default())))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/serialization.rs",
    "function": {
      "function_name": "deserialize_single",
      "return_type": "-> Option<MeasurementData>",
      "span": {
        "start": {
          "line": 41,
          "column": 1
        },
        "end": {
          "line": 127,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 84,
        "column": 25
      },
      "end": {
        "line": 84,
        "column": 26
      }
    },
    "replacement": "<",
    "genre": "BinaryOperator"
  },
  {
    "package": "git_perf_cli_types",
    "file": "cli_types/src/lib.rs",
    "function": {
      "function_name": "parse_key_value",
      "return_type": "-> Result<(String, String)>",
      "span": {
        "start": {
          "line": 250,
          "column": 1
        },
        "end": {
          "line": 257,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 251,
        "column": 5
      },
      "end": {
        "line": 256,
        "column": 21
      }
    },
    "replacement": "Ok((String::new(), \"xyzzy\".into()))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "<impl VecAggregation for Vec<f64>>::median",
      "return_type": "-> Option<f64>",
      "span": {
        "start": {
          "line": 121,
          "column": 5
        },
        "end": {
          "line": 132,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 130,
        "column": 34
      },
      "end": {
        "line": 130,
        "column": 35
      }
    },
    "replacement": "%",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "parse_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 169,
          "column": 1
        },
        "end": {
          "line": 178,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 170,
        "column": 5
      },
      "end": {
        "line": 177,
        "column": 6
      }
    },
    "replacement": "Ok((0, 1, 1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "internal_get_head_revision",
      "return_type": "-> Result<String, GitError>",
      "span": {
        "start": {
          "line": 145,
          "column": 1
        },
        "end": {
          "line": 147,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 146,
        "column": 5
      },
      "end": {
        "line": 146,
        "column": 26
      }
    },
    "replacement": "Ok(\"xyzzy\".into())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "get_refs",
      "return_type": "-> Result<Vec<Reference>, GitError>",
      "span": {
        "start": {
          "line": 646,
          "column": 1
        },
        "end": {
          "line": 663,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 647,
        "column": 5
      },
      "end": {
        "line": 662,
        "column": 24
      }
    },
    "replacement": "Ok(vec![Default::default()])",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit",
      "return_type": "-> Result<AuditResult>",
      "span": {
        "start": {
          "line": 77,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 156,
        "column": 50
      },
      "end": {
        "line": 156,
        "column": 51
      }
    },
    "replacement": "<=",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/measurement_retrieval.rs",
    "function": {
      "function_name": "summarize_measurements",
      "return_type": "-> impl Iterator<Item = Result<CommitSummary>>+'a",
      "span": {
        "start": {
          "line": 13,
          "column": 1
        },
        "end": {
          "line": 35,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 21,
        "column": 5
      },
      "end": {
        "line": 34,
        "column": 7
      }
    },
    "replacement": "::std::iter::empty()",
    "genre": "FnValue"
  },
  {
    "package": "git_perf_cli_types",
    "file": "cli_types/src/lib.rs",
    "function": {
      "function_name": "parse_datetime_value",
      "return_type": "-> Result<DateTime<Utc>>",
      "span": {
        "start": {
          "line": 271,
          "column": 1
        },
        "end": {
          "line": 285,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 272,
        "column": 20
      },
      "end": {
        "line": 272,
        "column": 21
      }
    },
    "replacement": "<=",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/config.rs",
    "function": {
      "function_name": "bump_epoch_in_conf",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 139,
          "column": 1
        },
        "end": {
          "line": 150,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 140,
        "column": 5
      },
      "end": {
        "line": 149,
        "column": 11
      }
    },
    "replacement": "Ok(())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "get_git_perf_remote",
      "return_type": "-> Option<String>",
      "span": {
        "start": {
          "line": 116,
          "column": 1
        },
        "end": {
          "line": 120,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 117,
        "column": 5
      },
      "end": {
        "line": 119,
        "column": 45
      }
    },
    "replacement": "Some(\"xyzzy\".into())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "random_suffix",
      "return_type": "-> String",
      "span": {
        "start": {
          "line": 186,
          "column": 1
        },
        "end": {
          "line": 189,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 187,
        "column": 5
      },
      "end": {
        "line": 188,
        "column": 28
      }
    },
    "replacement": "String::new()",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "get_repository_root",
      "return_type": "-> Result<String, String>",
      "span": {
        "start": {
          "line": 39,
          "column": 1
        },
        "end": {
          "line": 44,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 41,
        "column": 5
      },
      "end": {
        "line": 43,
        "column": 41
      }
    },
    "replacement": "Ok(String::new())",
    "genre": "FnValue"
  },
  {
    "package": "git_perf_cli_types",
    "file": "cli_types/src/lib.rs",
    "function": {
      "function_name": "parse_datetime_value_now",
      "return_type": "-> Result<DateTime<Utc>>",
      "span": {
        "start": {
          "line": 267,
          "column": 1
        },
        "end": {
          "line": 269,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 268,
        "column": 5
      },
      "end": {
        "line": 268,
        "column": 45
      }
    },
    "replacement": "Ok(DateTime::from_iter([Default::default()]))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/serialization.rs",
    "function": {
      "function_name": "serialize_single",
      "return_type": "-> String",
      "span": {
        "start": {
          "line": 16,
          "column": 1
        },
        "end": {
          "line": 32,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 31,
        "column": 30
      },
      "end": {
        "line": 31,
        "column": 31
      }
    },
    "replacement": "*",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "git_rev_parse",
      "return_type": "-> Result<String, GitError>",
      "span": {
        "start": {
          "line": 149,
          "column": 1
        },
        "end": {
          "line": 155,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 150,
        "column": 5
      },
      "end": {
        "line": 154,
        "column": 45
      }
    },
    "replacement": "Ok(\"xyzzy\".into())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "walk_commits",
      "return_type": "-> Result<Vec<(String, Vec<String>)>>",
      "span": {
        "start": {
          "line": 707,
          "column": 1
        },
        "end": {
          "line": 757,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 709,
        "column": 5
      },
      "end": {
        "line": 756,
        "column": 16
      }
    },
    "replacement": "Ok(vec![(String::new(), vec![String::new()])])",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit",
      "return_type": "-> Result<AuditResult>",
      "span": {
        "start": {
          "line": 77,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 122,
        "column": 47
      },
      "end": {
        "line": 122,
        "column": 48
      }
    },
    "replacement": ">=",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "get_git_version",
      "return_type": "-> Result<(i32, i32, i32)>",
      "span": {
        "start": {
          "line": 180,
          "column": 1
        },
        "end": {
          "line": 185,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 181,
        "column": 5
      },
      "end": {
        "line": 184,
        "column": 32
      }
    },
    "replacement": "Ok((1, 1, -1))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit",
      "return_type": "-> Result<AuditResult>",
      "span": {
        "start": {
          "line": 77,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 150,
        "column": 41
      },
      "end": {
        "line": 150,
        "column": 42
      }
    },
    "replacement": "%",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_lowlevel.rs",
    "function": {
      "function_name": "capture_git_output",
      "return_type": "-> Result<GitOutput, GitError>",
      "span": {
        "start": {
          "line": 48,
          "column": 1
        },
        "end": {
          "line": 53,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 52,
        "column": 5
      },
      "end": {
        "line": 52,
        "column": 46
      }
    },
    "replacement": "Ok(Default::default())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "raw_remove_measurements_from_commits",
      "return_type": "-> Result<(), GitError>",
      "span": {
        "start": {
          "line": 312,
          "column": 1
        },
        "end": {
          "line": 344,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 317,
        "column": 5
      },
      "end": {
        "line": 343,
        "column": 11
      }
    },
    "replacement": "Ok(())",
    "genre": "FnValue"
  },
  {
    "package": "git_perf_cli_types",
    "file": "cli_types/src/lib.rs",
    "function": {
      "function_name": "parse_datetime_value",
      "return_type": "-> Result<DateTime<Utc>>",
      "span": {
        "start": {
          "line": 271,
          "column": 1
        },
        "end": {
          "line": 285,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 280,
        "column": 9
      },
      "end": {
        "line": 280,
        "column": 36
      }
    },
    "replacement": "",
    "genre": "MatchArm"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/audit.rs",
    "function": {
      "function_name": "audit",
      "return_type": "-> Result<AuditResult>",
      "span": {
        "start": {
          "line": 77,
          "column": 1
        },
        "end": {
          "line": 207,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 147,
        "column": 9
      },
      "end": {
        "line": 147,
        "column": 10
      }
    },
    "replacement": "/",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "<impl Reporter<'a> for PlotlyReporter>::as_bytes",
      "return_type": "-> Vec<u8>",
      "span": {
        "start": {
          "line": 142,
          "column": 5
        },
        "end": {
          "line": 144,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 143,
        "column": 9
      },
      "end": {
        "line": 143,
        "column": 48
      }
    },
    "replacement": "vec![1]",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "report",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 253,
          "column": 1
        },
        "end": {
          "line": 363,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 323,
        "column": 56
      },
      "end": {
        "line": 323,
        "column": 58
      }
    },
    "replacement": "!=",
    "genre": "BinaryOperator"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/measurement_retrieval.rs",
    "function": {
      "function_name": "take_while_same_epoch",
      "return_type": "-> impl Iterator<Item = Result<CommitSummary>>",
      "span": {
        "start": {
          "line": 37,
          "column": 1
        },
        "end": {
          "line": 54,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 42,
        "column": 5
      },
      "end": {
        "line": 53,
        "column": 7
      }
    },
    "replacement": "::std::iter::empty()",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/measurement_storage.rs",
    "function": {
      "function_name": "add_multiple",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 17,
          "column": 1
        },
        "end": {
          "line": 47,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 22,
        "column": 5
      },
      "end": {
        "line": 46,
        "column": 11
      }
    },
    "replacement": "Ok(())",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/reporting.rs",
    "function": {
      "function_name": "ReporterFactory::from_file_name",
      "return_type": "-> Option<Box<dyn Reporter<'_>+'_>>",
      "span": {
        "start": {
          "line": 236,
          "column": 5
        },
        "end": {
          "line": 250,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 237,
        "column": 9
      },
      "end": {
        "line": 249,
        "column": 12
      }
    },
    "replacement": "Some(Box::new(Default::default()))",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/cli.rs",
    "function": {
      "function_name": "handle_calls",
      "return_type": "-> Result<()>",
      "span": {
        "start": {
          "line": 17,
          "column": 1
        },
        "end": {
          "line": 90,
          "column": 2
        }
      }
    },
    "span": {
      "start": {
        "line": 21,
        "column": 9
      },
      "end": {
        "line": 21,
        "column": 26
      }
    },
    "replacement": "",
    "genre": "MatchArm"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/git/git_interop.rs",
    "function": {
      "function_name": "<impl Drop for TempRef>::drop",
      "return_type": "",
      "span": {
        "start": {
          "line": 678,
          "column": 5
        },
        "end": {
          "line": 681,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 679,
        "column": 9
      },
      "end": {
        "line": 680,
        "column": 89
      }
    },
    "replacement": "()",
    "genre": "FnValue"
  },
  {
    "package": "git-perf",
    "file": "git_perf/src/stats.rs",
    "function": {
      "function_name": "<impl VecAggregation for Vec<f64>>::median",
      "return_type": "-> Option<f64>",
      "span": {
        "start": {
          "line": 121,
          "column": 5
        },
        "end": {
          "line": 132,
          "column": 6
        }
      }
    },
    "span": {
      "start": {
        "line": 122,
        "column": 9
      },
      "end": {
        "line": 131,
        "column": 10
      }
    },
    "replacement": "Some(-1.0)",
    "genre": "FnValue"
  }
]