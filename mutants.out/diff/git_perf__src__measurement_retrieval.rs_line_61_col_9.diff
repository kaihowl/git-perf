--- git_perf/src/measurement_retrieval.rs
+++ replace <impl MeasurementReducer<'a> for T>::reduce_by -> Option<MeasurementSummary> with Some(Default::default())
@@ -53,29 +53,17 @@
     })
 }
 
 impl<'a, T> MeasurementReducer<'a> for T
 where
     T: Iterator<Item = &'a MeasurementData>,
 {
     fn reduce_by(self, fun: ReductionFunc) -> Option<MeasurementSummary> {
-        let mut peekable = self.peekable();
-        let expected_epoch = peekable.peek().map(|m| m.epoch);
-        let mut vals = peekable.map(|m| {
-            debug_assert_eq!(Some(m.epoch), expected_epoch);
-            m.val
-        });
-
-        let aggregate_val = vals.aggregate_by(fun);
-
-        Some(MeasurementSummary {
-            epoch: expected_epoch?,
-            val: aggregate_val?,
-        })
+        Some(Default::default()) /* ~ changed by cargo-mutants ~ */
     }
 }
 
 #[derive(Debug, PartialEq)]
 pub struct Commit {
     pub commit: String,
     pub measurements: Vec<MeasurementData>,
 }
