--- git_perf/src/git/git_interop.rs
+++ replace push -> Result<()> with Ok(())
@@ -770,40 +770,17 @@
         GitError::RefConcurrentModification { .. } | GitError::RefFailedToLock { .. } => Ok(()),
         _ => Err(err),
     })?;
 
     Ok(())
 }
 
 pub fn push(work_dir: Option<&Path>) -> Result<()> {
-    let op = || {
-        raw_push(work_dir)
-            .map_err(map_git_error_for_backoff)
-            .map_err(|e: ::backoff::Error<GitError>| match e {
-                ::backoff::Error::Transient { .. } => {
-                    match pull_internal(work_dir).map_err(map_git_error_for_backoff) {
-                        Ok(_) => e,
-                        Err(e) => e,
-                    }
-                }
-                ::backoff::Error::Permanent { .. } => e,
-            })
-    };
-
-    let backoff = default_backoff();
-
-    ::backoff::retry_notify(backoff, op, retry_notify).map_err(|e| match e {
-        ::backoff::Error::Permanent(err) => {
-            anyhow!(err).context("Permanent failure while pushing refs")
-        }
-        ::backoff::Error::Transient { err, .. } => anyhow!(err).context("Timed out pushing refs"),
-    })?;
-
-    Ok(())
+    Ok(()) /* ~ changed by cargo-mutants ~ */
 }
 
 #[cfg(test)]
 mod test {
     use super::*;
     use std::env::{self, set_current_dir};
     use std::process;
 
