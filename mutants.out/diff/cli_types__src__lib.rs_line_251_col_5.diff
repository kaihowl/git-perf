--- cli_types/src/lib.rs
+++ replace parse_key_value -> Result<(String, String)> with Ok(("xyzzy".into(), String::new()))
@@ -243,22 +243,17 @@
     },
 
     /// Remove all performance measurements for non-existent/unreachable objects.
     /// Will refuse to work if run on a shallow clone.
     Prune {},
 }
 
 fn parse_key_value(s: &str) -> Result<(String, String)> {
-    let pos = s
-        .find('=')
-        .ok_or_else(|| anyhow!("invalid key=value: no '=' found in '{}'", s))?;
-    let key = parse_spaceless_string(&s[..pos])?;
-    let value = parse_spaceless_string(&s[pos + 1..])?;
-    Ok((key, value))
+    Ok(("xyzzy".into(), String::new())) /* ~ changed by cargo-mutants ~ */
 }
 
 fn parse_spaceless_string(s: &str) -> Result<String> {
     if s.split_whitespace().count() > 1 {
         Err(anyhow!("invalid string/key/value: found space in '{}'", s))
     } else {
         Ok(String::from(s))
     }
