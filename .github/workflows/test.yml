name: ci

# TODO(kaihowl) deeper test with merge-based PR workflow (HEAD == merge commit)
# TODO(kaihowl) clean up old reports / do we want commit based reports anyway?

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - master
      - build/*
  pull_request:
    branches:
      - master
jobs:
  test:
    name: test
    env:
      # For some builds, we use cross to test on 32-bit and big-endian
      # systems.
      CARGO: cargo
      # When CARGO is set to CROSS, this is set to `--target matrix.target`.
      TARGET_FLAGS:
      # When CARGO is set to CROSS, TARGET_DIR includes matrix.target.
      TARGET_DIR: ./target
      # Emit backtraces on panics.
      RUST_BACKTRACE: 1
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        build:
        - stable
        - beta
        include:
        - build: stable
          os: ubuntu-22.04
          rust: stable
        - build: beta
          os: ubuntu-22.04
          rust: beta
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 40

  rustfmt:
    name: rustfmt
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable
        components: rustfmt
    - name: Check formatting
      run: cargo fmt --all --check

  rustdoc:
    name: rust doc
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable
        components: rustfmt
    - name: Check docs
      run: |
        export RUSTDOCFLAGS="-D warnings"
        cargo doc --no-deps


  report:
    name: git-perf
    needs: test
    if: always()
    runs-on: ubuntu-22.04
    steps:
      - name: report
        uses: ./.github/actions/report

